{"version":3,"sources":["context/crud/types.jsx","context/crud/reducer.jsx","context/crud/actions.jsx","context/crud/selectors.jsx","context/crud/index.jsx","redux/crud/actions.js","utils/uniqueId.js","redux/auth/actions.js","layout/DefaultLayout/index.jsx","assets/adminimg.png","layout/HeaderContent/index.jsx","components/CollapseBox/index.jsx","components/SidePanel/index.jsx","layout/CrudLayout/index.jsx","layout/DashboardLayout/index.jsx","components/RecentTable/index.jsx","pages/Dashboard.jsx"],"names":["OPEN_MODAL","CLOSE_MODAL","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelCollapsed","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","actionTypes","Error","contextActions","dispatch","modal","open","close","advancedBox","editBox","panel","collapse","collapsedBox","readBox","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","children","useReducer","value","useMemo","Provider","useCrudContext","context","useContext","undefined","crudContextAction","crudContextSelector","crud","resetState","resetAction","actionType","keyState","payload","currentItem","data","currentAction","list","entity","currentPage","request","page","success","result","items","pagination","current","parseInt","pageSize","total","count","create","jsonData","read","itemId","update","delete","search","source","option","cancel","uniqueId","idstr","String","fromCharCode","Math","floor","random","ascicodeChar","length","login","loginAdminData","loading","authService","console","log","authValue","admin","isLoggedIn","permissions","storePersist","set","history","push","logout","DefaultLayout","Header","Layout","HeaderContent","useDispatch","menu","style","border","padding","display","margin","borderRadius","color","boxShadow","background","marginRight","src","adminimg","width","alt","flexDirection","flexWrap","justifyContent","alignItems","fontSize","marginBottom","outline","backgroundColor","onClick","className","overlay","placement","arrow","trigger","icon","UserOutlined","CollapseBoxButton","onChange","title","TopCollapseBox","isOpen","show","opacity","span","BottomCollapseBox","CollapseBox","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","isDiplayed","marginLeft","Sider","SidePanel","config","fixHeaderPanel","ADD_NEW_ENTITY","useState","styleSider","setStyleSider","opacitySider","setOpacitySider","useEffect","setTimeout","collapsible","collapsedWidth","left","Content","CrudLayout","sidePanelTopContent","sidePanelBottomContent","minHeight","maxWidth","DashboardLayout","RecentTable","props","dataTableColumns","name","moveToNextTable","dOptions","schedule","label","start","audit","finished","render","row","useFetch","isLoading","isSuccess","columns","rowKey","item","_id","dataSource","filter","res","some","j","Meta","Card","JSON","parse","localStorage","getItem","Dashboard","reminder","setReminder","Form","useForm","form","adminList","id","setFieldsValue","totalJob","setJob","setVendor","setModal","modal1","setModal1","modal2","setModal2","modal3","setModal3","modal4","statusModal","setStatus","jobStatus","setJobStatus","toggleModal","toggleModal2","toggleModal3","document","body","classList","add","remove","setTitle","content","setContent","isFormOpen","setIsFormOpen","handleSubmit","e","window","location","reload","to","setTo","cc","setCc","isEscOpen","setIsEscOpen","handleEscSubmit","ratingChanged","newRating","toggleModal1","jobs","Array","isArray","status","record","job","s","toUpperCase","changeStatus","val","formValues","remarks","picture","updated","currentTable","Object","keys","key","map","includes","nextTable","indexOf","leadColumns","dataIndex","productColumns","closeColumns","auditColumns","finishedColumns","textAlign","fontWeight","gutter","justify","xs","sm","height","labels","datasets","hoverBackgroundColor","options","scales","y","beginAtZero","top","right","bottom","position","zIndex","transform","lineHeight","minWidth","onFinish","Item","defaultValue","values","obj","rules","required","message","TextArea","valuePropName","getValueFromEvent","fileList","listType","UploadOutlined","getFieldsValue","target","href","notes","rows","htmlType","role","placeholder","borderColor","for","size","activeColor"],"mappings":"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","file":"static/js/DashboardPage.e79ab0e6.chunk.js","sourcesContent":["export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_ADVANCED_BOX = \"OPEN_ADVANCED_BOX\";\nexport const CLOSE_ADVANCED_BOX = \"CLOSE_ADVANCED_BOX\";\n\nexport const OPEN_EDIT_BOX = \"OPEN_EDIT_BOX\";\nexport const CLOSE_EDIT_BOX = \"CLOSE_EDIT_BOX\";\n\nexport const OPEN_PANEL = \"OPEN_PANEL\";\nexport const CLOSE_PANEL = \"CLOSE_PANEL\";\nexport const COLLAPSE_PANEL = \"COLLAPSE_PANEL\";\n\nexport const OPEN_BOX = \"OPEN_BOX\";\nexport const CLOSE_BOX = \"CLOSE_BOX\";\nexport const COLLAPSE_BOX = \"COLLAPSE_BOX\";\n\nexport const OPEN_READ_BOX = \"OPEN_READ_BOX\";\nexport const CLOSE_READ_BOX = \"CLOSE_READ_BOX\";\nexport const COLLAPSE_READ_BOX = \"COLLAPSE_READ_BOX\";\n","import * as actionTypes from \"./types\";\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: !state.isPanelCollapsed,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from \"./types\";\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\n      },\n    },\n    editBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from \"react\";\nimport { initialState, contextReducer } from \"./reducer\";\nimport contextActions from \"./actions\";\nimport contextSelectors from \"./selectors\";\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","import * as actionTypes from \"./types\";\nimport { request } from \"@/request\";\n\nexport const crud = {\n  resetState: () => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_STATE,\n    });\n  },\n  resetAction: (actionType) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_ACTION,\n      keyState: actionType,\n      payload: null,\n    });\n  },\n  currentItem: (data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ITEM,\n      payload: { ...data },\n    });\n  },\n  currentAction: (actionType, data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ACTION,\n      keyState: actionType,\n      payload: { ...data },\n    });\n  },\n  list: (entity, currentPage = 1) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"list\",\n      payload: null,\n    });\n\n    let data = await request.list(entity, { page: currentPage });\n\n    if (data.success === true) {\n      const result = {\n        items: data.result,\n        pagination: {\n          current: parseInt(data.pagination.page, 10),\n          pageSize: 10,\n          total: parseInt(data.pagination.count, 10),\n        },\n      };\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"list\",\n        payload: result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"list\",\n        payload: null,\n      });\n    }\n  },\n  create: (entity, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"create\",\n      payload: null,\n    });\n    let data = await request.create(entity, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"create\",\n        payload: data.result,\n      });\n\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"create\",\n        payload: null,\n      });\n    }\n  },\n  read: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"read\",\n      payload: null,\n    });\n\n    let data = await request.read(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"read\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"read\",\n        payload: null,\n      });\n    }\n  },\n  update: (entity, itemId, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"update\",\n      payload: null,\n    });\n\n    let data = await request.update(entity, itemId, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"update\",\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"update\",\n        payload: null,\n      });\n    }\n  },\n\n  delete: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"delete\",\n      payload: null,\n    });\n\n    let data = await request.delete(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"delete\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"delete\",\n        payload: null,\n      });\n    }\n  },\n\n  search: (entity, source, option) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"search\",\n      payload: null,\n    });\n\n    source.cancel();\n\n    source = request.source();\n    let data = await request.search(entity, source, option);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"search\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"search\",\n        payload: null,\n      });\n    }\n  },\n};\n","export default function uniqueId() {\n  // always start with a letter (for DOM friendlyness)\n  let idstr = String.fromCharCode(Math.floor(Math.random() * 25 + 65));\n  do {\n    // between numbers and characters (48 is 0 and 90 is Z (42-48 = 90)\n    const ascicodeChar = Math.floor(Math.random() * 25 + 65);\n    idstr += String.fromCharCode(ascicodeChar);\n    idstr += Math.floor(Math.random() * 99);\n  } while (idstr.length < 8);\n\n  return idstr;\n}\n","import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\n\nexport const login = (loginAdminData) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: { loading: true },\n  });\n  const data = await authService.login(loginAdminData);\n\n  if (data.success === true) {\n    console.log(data)\n    const authValue = {\n      current: data.result.admin,\n      loading: false,\n      isLoggedIn: true,\n      permissions: data.result.permissions\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.result.admin,\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS,\n  });\n  history.push(\"/login\");\n};\n","import React from \"react\";\n\nimport { CrudContextProvider } from \"@/context/crud\";\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","export default __webpack_public_path__ + \"static/media/adminimg.3c486505.png\";","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Layout, Avatar, Menu, Dropdown } from \"antd\";\n\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { logout } from \"@/redux/auth/actions\";\nimport uniqueId from \"@/utils/uniqueId\";\nimport adminimg from '../../assets/adminimg.png';\n\n\nconst { Header } = Layout;\n\nexport default function HeaderContent() {\n  const dispatch = useDispatch();\n // how to fetch data from database. kuki i want access of user's image and his email etc.\n\n  const menu = (\n    <div\n      style={{ border: \"1px solid black\", padding: \"20px\", display: \"flex\", margin: \"20px\" ,borderRadius:'15px',color:'white',boxShadow:'0px 0px 10px  #002140',background:'white'}}\n    >\n      <div style={{margin:'10px',marginRight:'20px',}}>\n        <img src={adminimg} style={{width:'100px',borderRadius:'100%'}} alt=\"adminimg\" />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" ,flexWrap:'wrap',justifyContent:'center',alignItems:'center'}}>\n        <h1 style={{ fontSize: 20, marginBottom: 20 }}>Hello Admin!</h1>\n        <button style={{border:'none',outline:'none',backgroundColor:'rgb(255 40 40',padding:'5px 10px'}} key={`${uniqueId()}`} onClick={() => dispatch(logout())}>\n          Logout\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <Header className=\"site-layout-background\" style={{ padding: 0, background: \"none\" }}>\n      <Dropdown overlay={menu} placement=\"bottomRight\" arrow trigger={[\"click\"]}>\n        <Avatar icon={<UserOutlined />} />\n      </Dropdown>\n    </Header>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"none\", opacity: 0 }\n    : { display: \"block\", opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n  isPanelCollapsed,\n}) {\n  const collapsed = isCollapsed ? \"collapsed\" : \"\";\n  const isDiplayed = isPanelCollapsed ? \"-400px\" : \"0px\";\n  return (\n    <div\n      className=\"panelBox\"\n      style={{ width: \"400px\", marginLeft: isDiplayed }}\n    >\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={\"collapseBox \" + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>\n          {bottomContent}\n        </BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { Layout } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport CollapseBox from \"../CollapseBox\";\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({\n  config,\n  topContent,\n  bottomContent,\n  fixHeaderPanel,\n}) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelCollapsed, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [styleSider, setStyleSider] = useState(\"0px\");\n  const [opacitySider, setOpacitySider] = useState(\"1\");\n\n  useEffect(() => {\n    if (isPanelCollapsed) {\n      setStyleSider(\"-400px\");\n      setOpacitySider(0);\n    } else {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }\n\n    setTimeout(() => {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }, 300);\n  }, [isPanelCollapsed]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      // trigger={<MenuOutlined className=\"\" />}\n      width={400}\n      collapsible\n      collapsed={isPanelCollapsed}\n      collapsedWidth={\"0px\"}\n      onCollapse={collapsePanel}\n      // zeroWidthTriggerStyle={{\n      //   right: \"-50px\",\n      //   top: \"15px\",\n      // }}\n      style={{\n        background: \"#FFF\",\n        left: styleSider,\n        opacity: opacitySider,\n      }}\n    >\n      {fixHeaderPanel}\n      <CollapseBox\n        buttonTitle={ADD_NEW_ENTITY}\n        isPanelCollapsed={isPanelCollapsed}\n        isCollapsed={isBoxCollapsed}\n        onCollapse={collapsePanelBox}\n        topContent={topContent}\n        bottomContent={bottomContent}\n      ></CollapseBox>\n    </Sider>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport SidePanel from \"@/components/SidePanel\";\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <DefaultLayout>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SidePanel\n          config={config}\n          topContent={sidePanelTopContent}\n          bottomContent={sidePanelBottomContent}\n          fixHeaderPanel={fixHeaderPanel}\n        ></SidePanel>\n        <Layout className=\"site-layout\">\n          <HeaderContent />\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: \"50px 40px\",\n              margin: \"50px auto\",\n              width: \"100%\",\n              maxWidth: \"1000px\",\n            }}\n          >\n            {children}\n          </Content>\n        </Layout>\n      </Layout>\n    </DefaultLayout>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      <HeaderContent />\n      <Content\n        style={{\n          padding: \"30px 40px\",\n          margin: \"20px auto\",\n          width: \"100%\",\n          maxWidth:'1300px'\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { Button, Dropdown, Menu, Table } from \"antd\";\n\nimport { request } from \"@/request\";\nimport useFetch from \"@/hooks/useFetch\";\n\nimport {\n  EllipsisOutlined,\n  EyeOutlined,\n  EditOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\n\nfunction DropDownRowMenu({ row }) {\n  const Show = () => { };\n  function Edit() { }\n  function Delete() { }\n  return (\n    <Menu style={{ width: 130 }}>\n      <Menu.Item icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item icon={<DeleteOutlined />} onClick={Delete}>\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function RecentTable({ ...props }) {\n  let { entity, dataTableColumns, name, moveToNextTable } = props;\n  const dOptions = {\n    schedule: [\n      { label: 'Requirement Received', value: 'requirement received' },\n      { label: 'Site Visit Done', value: 'site visit done' },\n      { label: 'Vendor BOQ Received', value: 'vendor boq received' },\n      { label: 'Client BOQ Received', value: 'client boq received' },\n      { label: 'Email Confimation Received', value: 'email confirmation received' },\n      { label: 'PO Received', value: 'po received' },\n      { label: 'Vendor Allotted', value: 'vendor allotted' },\n    ],\n    start: [\n      { label: 'Team Aligned', value: 'team aligned' },\n      { label: 'Delay From Client', value: 'delay from client' },\n    ],\n    close: [\n      { label: 'Work Done', value: 'work done' },\n      { label: 'Updated BOQ Sent', value: 'updated boq sent' },\n      { label: 'Admin Approval', value: 'admin approval' },\n    ],\n    audit: [\n      { label: 'Client Updated BOQ Sent', value: 'client updated boq sent' },\n      { label: 'Update Approval', value: 'updated po received' },\n      { label: 'Sent for invoicing', value: 'sent for invoicing' },\n    ],\n    finished: [\n      { label: 'Invoice Sent', value: 'invoice sent' },\n      { label: 'Payment Received', value: 'payment received' },\n      { label: 'Invoice Received', value: 'invoice received' },\n      { label: 'Payment Done', value: 'payment done' },\n    ]\n  };\n\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: \"\",\n      render: (row) => {\n        return (\n          <Button onClick={() => moveToNextTable(row)}>Next</Button>\n        )\n      },\n    },\n  ];\n\n  const asyncList = () => {\n    return request.list(entity);\n  };\n  const { result, isLoading, isSuccess } = useFetch(asyncList);\n  const items = () => {\n    if (isSuccess && result) {\n\n      return result.filter(res => {\n        return dOptions[name].some(j => {\n          if (res['status'] == 'pending' && j.value == 'requirement received') {\n            return true;\n          }\n          return j['value'] == res['status']\n        })\n      });\n    };\n    return [];\n  };\n  return (\n    <>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        dataSource={isSuccess && items()}\n        pagination={false}\n        loading={isLoading}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Row, Col, Card, Select, Upload } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { Layout, Button } from \"antd\";\nimport { Bar,Pie } from \"react-chartjs-2\";\nimport { DashboardLayout } from \"@/layout\";\nimport RecentTable from \"@/components/RecentTable\";\nimport useFetch from \"@/hooks/useFetch\";\nimport { request } from \"@/request\";\nimport ReactStars from \"react-rating-stars-component\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nconst { Content } = Layout;\nconst {Meta} = Card;\n\n// import Admin from \"./Admin\";\nconst permissions = JSON.parse(localStorage.getItem('auth')).permissions;\nexport default function Dashboard() {\n  const [reminder, setReminder] = useState(\"\");\n  const [form] = Form.useForm();\n  const adminList = useFetch(() => {\n    return request.list(\"admin\");\n  }).result;\n\n  let admin =\n    adminList &&\n    adminList.filter(\n      (res) => res._id == JSON.parse(localStorage.getItem(\"auth\")).current.id\n    )[0];\n\n  useEffect(() => {\n    if (adminList) {\n      admin = adminList.filter(\n        (res) => res._id == JSON.parse(localStorage.getItem(\"auth\")).current.id\n      )[0];\n\n      setReminder(admin.reminder);\n    }\n  }, [adminList]);\n\n  useEffect(() => {\n    reminder != null && form.setFieldsValue({ reminder: reminder });\n  }, [reminder]);\n\n  const dOptions = {\n    schedule: [\n      { label: \"Requirement Received\", value: \"requirement received\" },\n      { label: \"Site Visit Done\", value: \"site visit done\" },\n      { label: \"Vendor BOQ Received\", value: \"vendor boq received\" },\n      { label: \"Client BOQ Received\", value: \"client boq received\" },\n      {\n        label: \"Email Confimation Received\",\n        value: \"email confirmation received\",\n      },\n      { label: \"PO Received\", value: \"po received\" },\n      { label: \"Vendor Allotted\", value: \"vendor allotted\" },\n    ],\n    start: [\n      { label: \"Team Aligned\", value: \"team aligned\" },\n      { label: \"Delay From Client\", value: \"delay from client\" },\n    ],\n    close: [\n      { label: \"Work Done\", value: \"work done\" },\n      { label: \"Updated BOQ Sent\", value: \"updated boq sent\" },\n      { label: \"Admin Approval\", value: \"admin approval\" },\n    ],\n    audit: [\n      { label: \"Client Updated BOQ Sent\", value: \"client updated boq sent\" },\n      { label: \"Update Approval\", value: \"updated po received\" },\n      { label: \"Sent for invoicing\", value: \"sent for invoicing\" },\n    ],\n    finished: [\n      // {\n      //   client: {\n      //     label: \"Invoice Received\",\n      //     value: \"invoice recieved\",\n      //     value: \"Payment Done\",\n      //     value: \"payment done\",\n      //   },\n      // },\n\n      // {\n      //   vendor: {\n      //     label: \"Invoice Sent\",\n      //     value: \"invoice sent\",\n      //     label: \"Payement Recieved\",\n      //     value: \"payment recieved\",\n      //   },\n      // },\n      { label: \"Invoice Sent\", value: \"invoice sent\" },\n      { label: \"Payment Received\", value: \"payment received\" },\n      { label: \"Invoice Received\", value: \"invoice received\" },\n      { label: \"Payment Done\", value: \"payment done\" },\n    ],\n  };\n\n  const dispatch = useDispatch();\n  const [totalJob, setJob] = useState(0);\n  const [totalVendor, setVendor] = useState(0);\n  const entity = \"job\";\n  const entityVendor = \"vendor\";\n  const [modal, setModal] = useState(false);\n  const [modal1, setModal1] = useState(false);\n  const [modal2, setModal2] = useState(false);\n  const [modal3, setModal3] = useState(false);\n  const [modal4, setModal4] = useState(false);\n  const [statusModal, setStatus] = useState(false);\n  const [jobStatus, setJobStatus] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n  // const [isFormVisible, setIsFormVisible] = useState(false);\n\n  const [isEscVisible, setIsEscVisible] = useState(false);\n  const [isFormVisible, setFormVisible] = useState(false);\n\n  const showForm = () => {\n    setFormVisible(true);\n  };\n\n  const hideForm = () => {\n    setFormVisible(false);\n  };\n  const showEscForm = () => {\n    setIsEscVisible(true);\n  };\n\n  const hideEscForm = () => {\n    setIsEscVisible(false);\n  };\n  const handleEscLinkClick = () => {\n    setIsEscVisible(true);\n  };\n\n  const handleLinkClick = () => {\n    setFormVisible(true);\n  };\n\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n  const toggleModal2 = () => {\n    setModal2(!modal2);\n  };\n  const toggleModal3 = () => {\n    setModal3(!modal3);\n  };\n  const toggleModal4 = () => {\n    setModal4(!modal4);\n  };\n  const toggleStatusModal=()=>{\n    setStatus(!statusModal);\n  }\n\n  if (modal || modal1 || statusModal || modal2 || modal3 || modal4) {\n    document.body.classList.add(\"active-modal\");\n  } else {\n    document.body.classList.remove(\"active-modal\");\n  }\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [isFormOpen, setIsFormOpen] = useState(true);\n\n  // Form submission handler\n  const handleSubmit = (e) => {\n    // e.preventDefault();\n\n    // Send the announcement data to the server or perform any necessary actions\n    // ...\n\n    // Reset the form after submission\n\n    setTitle(\"\");\n    setContent(\"\");\n    setIsFormOpen(false);\n    console.log(title, content, isOpen);\n    window.location.reload();\n  };\n  \n\n  const handleClose = () => {\n    // Close the form when the close button is clicked\n    setIsFormOpen(false);\n    window.location.reload();\n  };\n\n  if (!isFormOpen) {\n    // Return null if the form is closed\n    return null;\n  }\n\n  const [to, setTo] = useState(\"\");\n  const [cc, setCc] = useState(\"\");\n  const [isEscOpen, setIsEscOpen] = useState(true);\n\n  const handleEscSubmit = (e) => {\n    // Handle form submission\n\n    // Send the Escalation data to the server or perform any necessary actions\n    // ...\n\n    // Reset the form after submission\n    setTo(\"\");\n    setCc(\"\");\n    setIsEscOpen(false);\n    window.location.reload();\n  };\n\n  const handleEscClose = () => {\n    // Close the form when the close button is clicked\n    setIsEscOpen(false);\n    window.location.reload();\n  };\n\n  if (!isEscOpen) {\n    // Return null if the form is closed\n    return null;\n  }\n\n  const ratingChanged = (newRating) => {\n    console.log(newRating);\n  };\n\n  const toggleModal1 = () => {\n    setModal1(!modal1);\n  };\n\n  const fetchvendors = () => {\n    return request.list(entityVendor, {});\n  };\n\n  const fetchjobs = () => {\n    return request.list(entity, {});\n  };\n\n  const { result, isLoading, isSuccess } = useFetch(fetchvendors);\n  const jobs = useFetch(fetchjobs);\n\n  useEffect(() => {\n    if (Array.isArray(result)) {\n      setVendor(result.length);\n    }\n  }, [result]);\n\n  useEffect(() => {\n    if (Array.isArray(jobs.result)) {\n      setJob(jobs.result.length);\n    }\n  }, [jobs.result]);\n\n  const handleStatus = (current, job) => {\n    setStatus((s) => !s);\n    setJobStatus(job);\n  };\n\n  const render = (status, record) => {\n    return (\n      <Button onClick={() => handleStatus(status, record)}>\n        {status.toUpperCase()}\n      </Button>\n    );\n  };\n\n  // const changeStatus = (val) => {\n  //   const updated = { ...jobStatus, ...val };\n  //   dispatch(crud.update(\"job\", updated[\"_id\"], updated));\n  //   setStatus((s) => !s);\n  //   window.location.reload();\n  // };\n  const changeStatus = (val) => {\n    // Extract the form values\n    const formValues = {\n      status: val.status,\n      remarks: val.remarks,\n      picture: val.picture && val.picture[0], // Assuming you want to save only the first selected picture\n    };\n  \n    // Update the jobStatus object with the form values\n    const updated = { ...jobStatus, ...formValues };\n  \n    // Dispatch an action to update the job in the database\n    dispatch(crud.update(\"job\", updated[\"_id\"], updated));\n  \n    // Update the status (if needed)\n    setStatus((s) => !s);\n  \n    // Reload the page to reflect the changes\n    window.location.reload();\n  };\n  const handleStatusSubmit = () => {\n    // Perform any additional validation or processing before saving the form data\n    // ...\n  \n    // Call the changeStatus function to save the form data\n    changeStatus(form.getFieldsValue());\n  \n    // Optionally, you can perform additional actions after saving the form data\n    // ...\n  };\n  \n  const handleStatusCancel = () => {\n    // Perform any necessary actions when the user cancels the form\n    // ...\n  };\n  \n\n  const addReminder = (val) => {\n    const notes = { ...admin, ...val };\n    dispatch(crud.update(\"admin\", admin._id, notes));\n    window.location.reload();\n  };\n\n  const moveToNextTable = (job) => {\n    const currentTable = Object.keys(dOptions).filter((key) => {\n      const values = dOptions[key].map((val) => val[\"value\"]);\n      return values.includes(job[\"status\"]);\n    })[0];\n    const nextTable =\n      Object.keys(dOptions)[Object.keys(dOptions).indexOf(currentTable) + 1];\n\n    const updated = { ...job, status: dOptions[nextTable][0].value };\n    dispatch(crud.update(\"job\", updated[\"_id\"], updated));\n    setStatus((s) => !s);\n    window.location.reload();\n  };\n\n  const leadColumns = [\n    {\n      title: \"Date\",\n      dataIndex: \"date\",\n    },\n    {\n      title: \"Job Title\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Job Location\",\n      dataIndex: \"district\",\n    },\n    {\n      title: \"Client Name\",\n      dataIndex: \"client\",\n    },\n    {\n      title: \"vendor name\",\n      dataIndex: \"vendorname\",\n    },\n    {\n      title: \"Admin\",\n      dataIndex: \"admin\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: render,\n    },\n  ];\n\n  const productColumns = [\n    {\n      title: \"Job Title\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"vendor name\",\n      dataIndex: \"vendorname\",\n    },\n    {\n      title: \"Client HQ Name\",\n      dataIndex: \"client\",\n    },\n    {\n      title: \"Client  HQ Phone No.\",\n      dataIndex: \"hqphone\",\n    },\n    {\n      title: \"Client HQ E-mail\",\n      dataIndex: \"hqemail\",\n    },\n    {\n      title: \"Budget\",\n      dataIndex: \"budget\",\n    },\n\n    {\n      title: \"Start Date\",\n      dataIndex: \"startdate\",\n    },\n    {\n      title: \"Site Name\",\n      dataIndex: \"sitename\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: render,\n    },\n  ];\n\n  const closeColumns = [\n    {\n      title: \"Job Title\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"vendor name\",\n      dataIndex: \"vendorname\",\n    },\n    {\n      title: \" End Date\",\n      dataIndex: \"enddate\",\n    },\n    {\n      title: \" Site dox\",\n      dataIndex: \"dox\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: render,\n    },\n    {\n      title: \"Add Job Sheet\",\n      dataIndex: \"sheet\",\n    },\n    {\n      title: \"Add Customer Review\",\n      dataIndex: \"Review\",\n    },\n    {\n      title: \"Submit Bill Pic\",\n      dataIndex: \"dox\",\n    },\n  ];\n\n  const auditColumns = [\n    {\n      title: \"Job Title\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"vendor name\",\n      dataIndex: \"vendorname\",\n    },\n    {\n      title: \"Client Site Name\",\n      dataIndex: \"sitename\",\n    },\n    {\n      title: \"Client Site Phone No.\",\n      dataIndex: \"managerphone\",\n    },\n    {\n      title: \"Client Site E-mail\",\n      dataIndex: \"clientemail\",\n    },\n    {\n      title: \" Start Date\",\n      dataIndex: \"startdate\",\n    },\n    {\n      title: \" End Date\",\n      dataIndex: \"enddate\",\n    },\n    // {\n    //   title: \"Before Pic\",\n    //   dataIndex: \"dox\",\n    // },\n    {\n      title: \"After pic\",\n      dataIndex: \"dox\",\n    },\n    {\n      title: \"Approve Work\",\n      dataIndex: \"dox\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: render,\n    },\n  ];\n\n  const finishedColumns = [\n    {\n      title: \"Job Title\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"vendor name\",\n      dataIndex: \"vendorname\",\n    },\n    {\n      title: \" Vendor Budget\",\n      dataIndex: \"budget\",\n    },\n    {\n      title: \"Client Billing\",\n      dataIndex: \"client billing\",\n    },\n    {\n      title: \"Client Invoice  No.\",\n      dataIndex: \"invoice no.\",\n    },\n    {\n      title: \"Client Invoice Amount\",\n      dataIndex: \"invoice amount\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render: render,\n    },\n  ];\n  const data1 = {\n    labels: [\"Jobs Closed\", \"Jobs Pending\", \"Dead Jobs\"],\n    datasets: [\n      {\n        data: [3, 5, 1],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\n      },\n    ],\n  };\n\n  const data2 = {\n    labels: [\"Invoice Received\", \"Payment Received\", \"Invoice Pending\"],\n    datasets: [\n      {\n        data: [2, 1, 2],\n        backgroundColor: [\"#2ECC71\", \"#9B59B6\", \"#FFA500\"],\n        hoverBackgroundColor: [\"#2ECC71\", \"#9B59B6\", \"#FFA500\"],\n      },\n    ],\n  };\n   const data3 = {\n    labels: ['Client A', 'Client B', 'Client C', 'Client D'],\n    datasets: [\n      {\n        label: 'Sales',\n        data: [5, 8, 6, 9],\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#2ECC71'],\n        hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#2ECC71'],\n      },\n    ],\n  };\n\n  const data4 = {\n    labels: ['Vendor X', 'Vendor Y', 'Vendor Z'],\n    datasets: [\n      {\n        label: 'Sales',\n        data: [3, 4, 2],\n        backgroundColor: ['#FF6361', '#FFCD6B', '#6B5BFF'],\n      hoverBackgroundColor: ['#FF6361', '#FFCD6B', '#6B5BFF'],\n      },\n    ],\n  };\n\n  const data5 = {\n    labels: ['Jaipur', 'New Delhi', 'Lucknow', 'Bhopal'],\n    datasets: [\n      {\n        label: 'Sales',\n        data: [10, 7, 5, 8],\n        backgroundColor: ['#2ECC71', '#9B59B6', '#FFA500', '#FF6384'],\n        hoverBackgroundColor: ['#2ECC71', '#9B59B6', '#FFA500', '#FF6384'],\n      },\n    ],\n  };\n  console.log(permissions)\n  return (<>\n    <DashboardLayout>\n    {permissions===\"superadmin\"?\n      // <Layout>\n        // <Content>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              minHeight: \"100vh\",\n            }}\n          >\n            <div style={{ padding: \"20px\", maxWidth: \"800px\" }}>\n              <h1 style={{ textAlign: \"center\", fontSize: \"16px\", fontWeight: \"700\"}}>Superadmin Dashboard</h1>\n              <Row gutter={[16, 16]} justify=\"center\">\n                <Col xs={24} sm={12}>\n                  <Card style={{ textAlign: \"center\" }}>\n                    <Meta title=\"Jobs\" />\n                    <div style={{ height: \"320px\" }}>\n                      <Pie data={data1} />\n                    </div>\n                  </Card>\n                </Col>\n                <Col xs={24} sm={12}>\n                  <Card style={{ textAlign: \"center\" }}>\n                    <Meta title=\"Sales\" />\n                    <div style={{ height: \"320px\" }}>\n                      <Pie data={data2} />\n                    </div>\n                  </Card>\n                </Col>\n                <Col xs={24}>\n                  <Card style={{ textAlign: 'center' }}>\n                    <Meta title=\"Client Sales\" />\n                    <div style={{ height: '350px' }}>\n                      <Bar\n                        data={data3}\n                        options={{\n                          scales: {\n                            y: {\n                              beginAtZero: true,\n                            },\n                          },\n                        }}\n                      />\n                    </div>\n                  </Card>\n                </Col>\n                <Col xs={24}>\n                  <Card style={{ textAlign: 'center' }}>\n                    <Meta title=\"Vendor Sales\" />\n                    <div style={{ height: '350px' }}>\n                      <Bar\n                        data={data4}\n                        options={{\n                          scales: {\n                            y: {\n                              beginAtZero: true,\n                            },\n                          },\n                        }}\n                      />\n                    </div>\n                  </Card>\n                </Col>\n                <Col xs={24}>\n                  <Card style={{ textAlign: 'center' }}>\n                    <Meta title=\"Region Sales\" />\n                    <div style={{ height: '350px' }}>\n                      <Bar\n                        data={data5}\n                        options={{\n                          scales: {\n                            y: { beginAtZero: true },\n                          },\n                        }}\n                      />\n                    </div>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </div>\n      //   {/* </Content>\n      // </Layout> */}\n      :\n      <>\n        {/* <Admin/> */}\n        {statusModal && (\n          <div className=\"modal\">\n            <div\n              onClick={toggleModal1}\n              className=\"overlay\"\n              style={{\n                background: \"rgba(49,49,49,0.8)\",\n                width: \"100vw\",\n                height: \"100vh\",\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                position: \"fixed\",\n                zIndex: \"10\",\n              }}\n            ></div>\n            <div\n              className=\"modal-content\"\n              style={{\n                position: \"fixed\",\n                top: \"40%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                lineHeight: 1.4,\n                background: \"#f1f1f1\",\n                padding: \"14px 28px\",\n                borderRadius: \"3px\",\n                maxWidth: \"600px\",\n                minWidth: \"409px\",\n                zIndex: 11,\n              }}\n            >\n              <Form onFinish={changeStatus}>\n                <h3>Change Job Status</h3>\n                <Form.Item label=\"Status\" name=\"status\">\n                  <Select\n                    defaultValue={jobStatus && jobStatus[\"status\"]}\n                    options={\n                      jobStatus &&\n                      Object.values(dOptions).filter((j) => {\n                        return j.some((obj) => {\n                          if (\n                            jobStatus[\"status\"] == \"pending\" &&\n                            obj.value == \"requirement received\"\n                          ) {\n                            return true;\n                          }\n                          return obj.value == jobStatus[\"status\"];\n                        });\n                      })[0]\n                    }\n                  ></Select>\n                </Form.Item>\n                <Form.Item\n                  name=\"remarks\"\n                  label=\"Remarks\"\n                  rules={[{ required: true, message: \"Please provide remarks\" }]}\n                >\n                  <Input.TextArea />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"picture\"\n                  label=\"Upload Picture\"\n                  valuePropName=\"fileList\"\n                  getValueFromEvent={(e) => e.fileList}\n                >\n                  <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                    <Button icon={<UploadOutlined />}>Click to upload</Button>\n                  </Upload>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button type=\"primary\" onClick={handleStatusSubmit}>\n                    Submit\n                  </Button>\n                  <Button type=\"primary\" onClick={toggleStatusModal}>\n                    Cancel\n                  </Button>\n                  {/* <Button onClick={hideForm}>Cancel</Button> */}\n                </Form.Item>\n              </Form>\n            </div>\n          </div>\n        )}\n\n        <div className=\"space30\"></div>\n        <Row gutter={[20, 20]}>\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"whiteBox shadow\" style={{ height: \"380px\" }}>\n              <div\n                className=\"pad20\"\n                style={{ textAlign: \"center\", justifyContent: \"center\" }}\n              >\n                <h3 style={{ color: \"#22075e\", marginBottom: 30 }}>\n                  Job Preview\n                </h3>\n                <p style={{ color: \"#1DA57A\", margin: \"0px\", fontSize: \"15px\" }}>\n                  Total number of Pending Jobs: {totalJob}{\" \"}\n                </p>\n                <p style={{ color: \"#1DA57A\", margin: \"0px\", fontSize: \"15px\" }}>\n                  Jobs closed Today:{\" \"}\n                </p>\n                <p style={{ color: \"#1DA57A\", margin: \"0px\", fontSize: \"15px\" }}>\n                  Total number of esclated jobs:{\" \"}\n                </p>\n                <p style={{ color: \"#1DA57A\", margin: \"0px\", fontSize: \"15px\" }}>\n                  New Jobs Alloted:{\" \"}\n                </p>\n              </div>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"whiteBox shadow\" style={{ height: \"380px\" }}>\n              <div\n                className=\"pad20\"\n                style={{ textAlign: \"center\", justifyContent: \"center\" }}\n              >\n                <h3 style={{ color: \"#22075e\", marginBottom: 30 }}>\n                  Quick Links\n                </h3>\n                <a onClick={toggleModal2} target=\"_blank\">\n                  Create Announcement\n                </a>\n                <br />\n                <a href=\"/vendor\" target=\"_blank\">\n                  {\" \"}\n                  Add New Vendor\n                </a>\n                <br />\n                <a href=\"/product\" target=\"_blank\">\n                  {\" \"}\n                  Add New Service\n                </a>\n                <br />\n                <a href=\"/lead\" target=\"_blank\">\n                  {\" \"}\n                  Add New Job\n                </a>\n                <br />\n                <a onClick={toggleModal3} target=\"_blank\">\n                  Create Escalation\n                </a>\n                <br />\n                <a onClick={toggleModal1} target=\"_blank\">\n                  {\" \"}\n                  Find a Vendor\n                </a>\n                <br />\n                <a onClick={toggleModal1} target=\"_blank\">\n                  {\" \"}\n                  Find a job\n                </a>\n                <br />\n                <a onClick={toggleModal1} target=\"_blank\">\n                  {\" \"}\n                  Find a service\n                </a>\n                <br />\n                <a target=\"_blank\"> Request Approval</a>\n                <br />\n              </div>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"whiteBox shadow\" style={{ height: \"380px\" }}>\n              <div\n                className=\"pad20\"\n                style={{ textAlign: \"center\", justifyContent: \"center\" }}\n              >\n                <h3 style={{ color: \"#22075e\", marginBottom: 30 }}>\n                  Notification\n                </h3>\n                {}\n              </div>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={6}>\n            <div className=\"whiteBox shadow\" style={{ height: \"380px\" }}>\n              <div\n                className=\"pad20\"\n                style={{ textAlign: \"center\", justifyContent: \"center\" }}\n              >\n                <h3 style={{ color: \"#22075e\", marginBottom: 30 }}>Reminder</h3>\n                <Form onFinish={addReminder} form={form}>\n                  <Form.Item name=\"reminder\">\n                    <TextArea rows={10}></TextArea>\n                  </Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Save\n                  </Button>\n                </Form>\n              </div>\n            </div>\n          </Col>\n        </Row>\n\n        <div className=\"space30\"></div>\n        <Row gutter={[24, 24]}>\n          <Col className=\"gutter-row\" span={24}>\n            <div className=\"whiteBox shadow\">\n              <div className=\"pad20\">\n                <h3 style={{ color: \"#22075e\", marginBottom: 5 }}>\n                  Pending To Schedule\n                </h3>\n              </div>\n              <RecentTable\n                entity={\"job\"}\n                name=\"schedule\"\n                dataTableColumns={leadColumns}\n                moveToNextTable={moveToNextTable}\n                dOptions={dOptions}\n                jobStatus={jobStatus}\n              />\n              <i className=\"bi bi-arrow-down\" style={{ color: \"black\" }}></i>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={24}>\n            <div className=\"whiteBox shadow\">\n              <div className=\"pad20\">\n                <h3 style={{ color: \"#22075e\", marginBottom: 5 }}>\n                  Pending to start\n                </h3>\n              </div>\n              <RecentTable\n                entity={\"job\"}\n                name=\"start\"\n                dataTableColumns={productColumns}\n                moveToNextTable={moveToNextTable}\n                dOptions={dOptions}\n                jobStatus={jobStatus}\n              />\n              <i className=\"bi bi-arrow-down\" style={{ color: \"black\" }}></i>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={24}>\n            <div className=\"whiteBox shadow\">\n              <div className=\"pad20\">\n                <h3 style={{ color: \"#22075e\", marginBottom: 5 }}>\n                  Pending to Close\n                </h3>\n              </div>\n              <RecentTable\n                entity={\"job\"}\n                name=\"close\"\n                dataTableColumns={closeColumns}\n                moveToNextTable={moveToNextTable}\n                dOptions={dOptions}\n                jobStatus={jobStatus}\n              />\n              <i className=\"bi bi-arrow-down\" style={{ color: \"black\" }}></i>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={24}>\n            <div className=\"whiteBox shadow\">\n              <div className=\"pad20\">\n                <h3 style={{ color: \"#22075e\", marginBottom: 5 }}>\n                  Audit And checkout\n                </h3>\n              </div>\n              <RecentTable\n                entity={\"job\"}\n                name=\"audit\"\n                dataTableColumns={auditColumns}\n                moveToNextTable={moveToNextTable}\n                dOptions={dOptions}\n                jobStatus={jobStatus}\n              />\n              <i className=\"bi bi-arrow-down\" style={{ color: \"black\" }}></i>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={24}>\n            <div className=\"whiteBox shadow\">\n              <div className=\"pad20\">\n                <h3 style={{ color: \"#22075e\", marginBottom: 5 }}>\n                  Finished Jobs\n                </h3>\n              </div>\n              <RecentTable\n                entity={\"job\"}\n                name=\"finished\"\n                dataTableColumns={finishedColumns}\n                moveToNextTable={moveToNextTable}\n                dOptions={dOptions}\n                jobStatus={jobStatus}\n              />\n              <i className=\"bi bi-arrow-down\" style={{ color: \"black\" }}></i>\n            </div>\n          </Col>\n\n          {modal && (\n            <div className=\"modal\">\n              <div\n                onClick={toggleModal}\n                className=\"overlay\"\n                style={{\n                  background: \"rgba(49,49,49,0.8)\",\n                  width: \"100vw\",\n                  height: \"100vh\",\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  position: \"fixed\",\n                }}\n              ></div>\n              <div\n                className=\"modal-content\"\n                style={{\n                  position: \"absolute\",\n                  top: \"40%\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  lineHeight: 1.4,\n                  background: \"#f1f1f1\",\n                  padding: \"14px 28px\",\n                  borderRadius: \"3px\",\n                  maxWidth: \"600px\",\n                  minWidth: \"409px\",\n                  zIndex: 1,\n                }}\n              >\n                <form role=\"form\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search Here\"\n                      style={{\n                        margin: \"10px\",\n                        borderRadius: \"5px\",\n                        padding: \"4px\",\n                        borderColor: \"powderblue\",\n                      }}\n                    ></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"name\">Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"name\"\n                      placeholder=\"Enter Name\"\n                      style={{\n                        margin: \"10px\",\n                        padding: \"4px\",\n                        borderRadius: \"6px\",\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"name\">Services</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"service\"\n                      placeholder=\"Enter Service\"\n                      style={{\n                        margin: \"10px\",\n                        padding: \"4px\",\n                        borderRadius: \"6px\",\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <ReactStars\n                      count={5}\n                      onChange={ratingChanged}\n                      size={24}\n                      activeColor=\"#ffd700\"\n                    />\n                  </div>\n                </form>\n                <button\n                  className=\"close-modal ant-btn ant-btn-primary\"\n                  type=\"submit\"\n                  style={{\n                    top: \"10px\",\n                    right: \"10px\",\n                    padding: \"5px 8px\",\n                  }}\n                  onClick={toggleModal}\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          )}\n          {modal1 && (\n            <div className=\"modal\">\n              <div\n                onClick={toggleModal1}\n                className=\"overlay\"\n                style={{\n                  background: \"rgba(49,49,49,0.8)\",\n                  width: \"100vw\",\n                  height: \"100vh\",\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  position: \"fixed\",\n                }}\n              ></div>\n              <div\n                className=\"modal-content\"\n                style={{\n                  position: \"absolute\",\n                  top: \"40%\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  lineHeight: 1.4,\n                  background: \"#f1f1f1\",\n                  padding: \"14px 28px\",\n                  borderRadius: \"3px\",\n                  maxWidth: \"600px\",\n                  minWidth: \"409px\",\n                  zIndex: 1,\n                }}\n              >\n                <form role=\"form\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search Here\"\n                      style={{\n                        margin: \"10px\",\n                        borderRadius: \"5px\",\n                        padding: \"4px\",\n                        borderColor: \"powderblue\",\n                      }}\n                    ></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"name\">Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"name\"\n                      placeholder=\"Enter Name\"\n                      style={{\n                        margin: \"10px\",\n                        padding: \"4px\",\n                        borderRadius: \"6px\",\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"name\">Services</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"service\"\n                      placeholder=\"Enter Service\"\n                      style={{\n                        margin: \"10px\",\n                        padding: \"4px\",\n                        borderRadius: \"6px\",\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <ReactStars\n                      count={5}\n                      onChange={ratingChanged}\n                      size={24}\n                      activeColor=\"#ffd700\"\n                    />\n                    ,\n                  </div>\n                </form>\n                <button\n                  className=\"close-modal ant-btn ant-btn-primary\"\n                  type=\"submit\"\n                  style={{\n                    top: \"10px\",\n                    right: \"10px\",\n                    padding: \"5px 8px\",\n                  }}\n                  onClick={toggleModal1}\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          )}\n          {modal2 && (\n            <div className=\"modal\">\n              <div\n                onClick={toggleModal2}\n                className=\"overlay\"\n                style={{\n                  background: \"rgba(49,49,49,0.8)\",\n                  width: \"100vw\",\n                  height: \"100vh\",\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  position: \"fixed\",\n                }}\n              ></div>\n              <div\n                className=\"modal-content\"\n                style={{\n                  position: \"absolute\",\n                  top: \"40%\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  lineHeight: 1.4,\n                  background: \"#f1f1f1\",\n                  padding: \"14px 28px\",\n                  borderRadius: \"3px\",\n                  maxWidth: \"600px\",\n                  minWidth: \"409px\",\n                  zIndex: 1,\n                }}\n              >\n                {/* <form role=\"form\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search Here\"\n                      style={{\n                        margin: \"10px\",\n                        borderRadius: \"5px\", \n                        padding: \"4px\",\n                        borderColor: \"powderblue\",\n                      }}\n                    ></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"name\">Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"name\"\n                      placeholder=\"Enter Name\"\n                      style={{\n                        margin: \"10px\",\n                        padding: \"4px\",\n                        borderRadius: \"6px\",\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"name\">Services</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"service\"\n                      placeholder=\"Enter Service\"\n                      style={{\n                        margin: \"10px\",\n                        padding: \"4px\",\n                        borderRadius: \"6px\",\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <ReactStars\n                      count={5}\n                      onChange={ratingChanged}\n                      size={24}\n                      activeColor=\"#ffd700\"\n                    />\n                    \n                  </div>\n                </form> */}\n                <Form onFinish={handleSubmit}>\n                  <Form.Item>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Title\"\n                      value={title}\n                      onChange={(e) => setTitle(e.target.value)}\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Input\n                      placeholder=\"Content\"\n                      value={content}\n                      onChange={(e) => setContent(e.target.value)}\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Button\n                      type=\"submit\"\n                      htmlType=\"submit\"\n                      className=\"close-modal ant-btn ant-btn-primary\"\n                      style={{\n                        top: \"10px\",\n                        right: \"10px\",\n                        padding: \"5px 8px\",\n                      }}\n                      onClick={handleSubmit}\n                    >\n                      Create Announcement\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      style={{\n                        top: \"10px\",\n                        right: \"10px\",\n                        padding: \"5px 8px\",\n                      }}\n                      onClick={toggleModal2}\n                    >\n                      Cancel\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </div>\n            </div>\n          )}\n          {modal3 && (\n            <div className=\"modal\">\n              <div\n                onClick={toggleModal3}\n                className=\"overlay\"\n                style={{\n                  background: \"rgba(49,49,49,0.8)\",\n                  width: \"100vw\",\n                  height: \"100vh\",\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  position: \"fixed\",\n                }}\n              ></div>\n              <div\n                className=\"modal-content\"\n                style={{\n                  position: \"absolute\",\n                  top: \"40%\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  lineHeight: 1.4,\n                  background: \"#f1f1f1\",\n                  padding: \"14px 28px\",\n                  borderRadius: \"3px\",\n                  maxWidth: \"600px\",\n                  minWidth: \"409px\",\n                  zIndex: 1,\n                }}\n              >\n                <Form onFinish={handleEscSubmit}>\n                  <Form.Item>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"To\"\n                      value={to}\n                      onChange={(e) => setTitle(e.target.value)}\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Input\n                      placeholder=\"Cc\"\n                      value={cc}\n                      onChange={(e) => setContent(e.target.value)}\n                    />\n                  </Form.Item>\n                  <Form.Item>\n                    <Button\n                      type=\"submit\"\n                      htmlType=\"submit\"\n                      className=\"close-modal ant-btn ant-btn-primary\"\n                      style={{\n                        top: \"10px\",\n                        right: \"10px\",\n                        padding: \"5px 8px\",\n                      }}\n                      onClick={handleEscSubmit}\n                    >\n                      Create Escalation\n                    </Button>\n                    <Button\n                      type=\"button\"\n                      style={{\n                        top: \"10px\",\n                        right: \"10px\",\n                        padding: \"5px 8px\",\n                      }}\n                      onClick={toggleModal3}\n                    >\n                      Cancel\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </div>\n            </div>\n          )}\n          {modal4 && (\n            <div className=\"modal\">\n              <div\n                onClick={toggleModal2}\n                className=\"overlay\"\n                style={{\n                  background: \"rgba(49,49,49,0.8)\",\n                  width: \"100vw\",\n                  height: \"100vh\",\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  position: \"fixed\",\n                }}\n              ></div>\n              <div\n                className=\"modal-content\"\n                style={{\n                  position: \"absolute\",\n                  top: \"40%\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  lineHeight: 1.4,\n                  background: \"#f1f1f1\",\n                  padding: \"14px 28px\",\n                  borderRadius: \"3px\",\n                  maxWidth: \"600px\",\n                  minWidth: \"409px\",\n                  zIndex: 1,\n                }}\n              >\n                <form role=\"form\">\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search Here\"\n                      style={{\n                        margin: \"10px\",\n                        borderRadius: \"5px\",\n                        padding: \"4px\",\n                        borderColor: \"powderblue\",\n                      }}\n                    ></input>\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"name\">Name</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"name\"\n                      placeholder=\"Enter Name\"\n                      style={{\n                        margin: \"10px\",\n                        padding: \"4px\",\n                        borderRadius: \"6px\",\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label for=\"name\">Services</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"service\"\n                      placeholder=\"Enter Service\"\n                      style={{\n                        margin: \"10px\",\n                        padding: \"4px\",\n                        borderRadius: \"6px\",\n                      }}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <ReactStars\n                      count={5}\n                      onChange={ratingChanged}\n                      size={24}\n                      activeColor=\"#ffd700\"\n                    />\n                  </div>\n                </form>\n                <button\n                  className=\"close-modal ant-btn ant-btn-primary\"\n                  type=\"submit\"\n                  style={{\n                    top: \"10px\",\n                    right: \"10px\",\n                    padding: \"5px 8px\",\n                  }}\n                  onClick={toggleModal2}\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          )}\n        </Row>\n      </>}\n    </DashboardLayout>\n    </>);\n}\n"],"sourceRoot":""}