{"version":3,"sources":["context/crud/types.jsx","context/crud/reducer.jsx","context/crud/actions.jsx","context/crud/selectors.jsx","context/crud/index.jsx","redux/crud/actions.js","redux/crud/selectors.js","utils/uniqueId.js","redux/auth/actions.js","components/Loading/index.jsx","utils/helpers.js","layout/DefaultLayout/index.jsx","assets/adminimg.png","layout/HeaderContent/index.jsx","components/CollapseBox/index.jsx","components/SidePanel/index.jsx","layout/CrudLayout/index.jsx","layout/DashboardLayout/index.jsx","components/CreateForm/index.jsx","components/UpdateForm/index.jsx","components/DeleteModal/index.jsx","components/ReadItem/index.jsx","components/SearchItem/index.jsx","components/DataTable/index.jsx","modules/CrudModule/CrudDataTable.jsx","modules/CrudModule/index.jsx","forms/CustomerForm.jsx","../node_modules/antd/es/space/Item.js","../node_modules/antd/es/space/index.js","pages/Customer.jsx"],"names":["OPEN_MODAL","CLOSE_MODAL","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelCollapsed","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","actionTypes","Error","contextActions","dispatch","modal","open","close","advancedBox","editBox","panel","collapse","collapsedBox","readBox","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","children","useReducer","value","useMemo","Provider","useCrudContext","context","useContext","undefined","crudContextAction","crudContextSelector","crud","resetState","resetAction","actionType","keyState","payload","currentItem","data","currentAction","list","entity","currentPage","request","page","success","result","items","pagination","current","parseInt","pageSize","total","count","create","jsonData","read","itemId","update","delete","search","source","option","cancel","selectCrud","selectCurrentItem","createSelector","selectListItems","selectItemById","find","item","_id","selectCreatedItem","selectUpdatedItem","selectDeletedItem","selectSearchedItems","uniqueId","idstr","String","fromCharCode","Math","floor","random","ascicodeChar","length","login","loginAdminData","loading","authService","console","log","authValue","admin","isLoggedIn","permissions","storePersist","set","history","push","logout","Loading","isLoading","antIcon","style","fontSize","spin","indicator","spinning","valueByString","obj","string","devider","split","map","key","reduce","o","x","get","join","Object","byString","s","a","replace","i","n","k","DefaultLayout","Header","Layout","HeaderContent","useDispatch","menu","border","padding","display","margin","borderRadius","color","boxShadow","background","marginRight","src","adminimg","width","alt","flexDirection","flexWrap","justifyContent","alignItems","marginBottom","outline","backgroundColor","onClick","className","overlay","placement","arrow","trigger","icon","UserOutlined","CollapseBoxButton","onChange","title","TopCollapseBox","isOpen","show","opacity","span","BottomCollapseBox","CollapseBox","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","isDiplayed","marginLeft","Sider","SidePanel","config","fixHeaderPanel","ADD_NEW_ENTITY","useState","styleSider","setStyleSider","opacitySider","setOpacitySider","useEffect","setTimeout","collapsible","collapsedWidth","left","Content","CrudLayout","sidePanelTopContent","sidePanelBottomContent","minHeight","maxWidth","DashboardLayout","JSON","parse","localStorage","getItem","CreateForm","formElements","setForm","useSelector","isSuccess","Form","useForm","form","resetFields","includes","layout","onFinish","fieldsValue","Item","htmlType","UpdateForm","setUniqueId","onSubmit","initials","field1","charAt","field2","randomNumber","generatedUniqueId","id","birthday","dayjs","date","setFieldsValue","DeleteModal","entityDisplayLabels","deleteMessage","modalTitle","displayItem","setDisplayItem","labels","visible","onOk","onCancel","confirmLoading","ReadItem","readColumns","currentResult","listState","setListState","isFirstRun","useRef","props","propsKey","dataIndex","propsTitle","label","itemsList","gutter","SearchItem","searchConfig","displayLabels","searchFields","outputValue","setValue","options","setOptions","isTyping","delayTimer","optionResults","onSelect","onSearch","searchText","clearTimeout","question","fields","currentValue","notFoundContent","allowClear","placeholder","suffix","DataTable","DropDownRowMenu","AddNewItem","dataTableColumns","dataTableTitle","render","row","cursor","listResult","listIsLoading","handelDataTableLoad","useCallback","onBack","window","back","ghost","extra","columns","rowKey","dataSource","EyeOutlined","EditOutlined","DeleteOutlined","CrudDataTable","SidePanelTopContent","FixHeaderPanel","panelTitle","block","PlusOutlined","CrudModule","createForm","updateForm","useLayoutEffect","Option","Select","url","API_BASE_URL","CustomerForm","isUpdateForm","panCardImg","setPanCardImg","adharCardImg","setAdharCardImg","vendorImg","setVendorImg","gstImg","setGstImg","chequeImg","setChequeImg","PostOffice","setPostOffice","ifscCode","setIfscCode","useFetch","uploadImage","e","img","FormData","append","target","files","post","then","res","path","replaceAll","setImages","catch","error","selectedServices","setSelectedServices","textAlign","name","rules","required","message","mode","optionLabelProp","service","productName","paddingRight","paddingLeft","values","BANK","disabled","BRANCH","axios","handleIfsc","State","District","handlePincode","max","height","backgroundImage","backgroundRepeat","backgroundSize","_ref","direction","index","marginDirection","wrap","_React$useContext","React","SpaceContext","horizontalSize","verticalSize","latestIndex","supportFlexGap","_extends","_defineProperty","paddingBottom","concat","__rest","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","spaceSize","small","middle","large","Space","_classNames","ConfigContext","getPrefixCls","space","directionConfig","_props$size","size","align","_props$direction","customizePrefixCls","prefixCls","_props$wrap","otherProps","useFlexGapSupport","_React$useMemo","Array","isArray","getNumberSize","_React$useMemo2","_slicedToArray","childNodes","toArray","keepEmpty","mergedAlign","cn","classNames","itemClassName","nodes","child","spaceContext","gapStyle","columnGap","rowGap","Customer","ENTITY_NAME","CREATE_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE"],"mappings":"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","file":"static/js/CustomerPage.3c9ea4cc.chunk.js","sourcesContent":["export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_ADVANCED_BOX = \"OPEN_ADVANCED_BOX\";\nexport const CLOSE_ADVANCED_BOX = \"CLOSE_ADVANCED_BOX\";\n\nexport const OPEN_EDIT_BOX = \"OPEN_EDIT_BOX\";\nexport const CLOSE_EDIT_BOX = \"CLOSE_EDIT_BOX\";\n\nexport const OPEN_PANEL = \"OPEN_PANEL\";\nexport const CLOSE_PANEL = \"CLOSE_PANEL\";\nexport const COLLAPSE_PANEL = \"COLLAPSE_PANEL\";\n\nexport const OPEN_BOX = \"OPEN_BOX\";\nexport const CLOSE_BOX = \"CLOSE_BOX\";\nexport const COLLAPSE_BOX = \"COLLAPSE_BOX\";\n\nexport const OPEN_READ_BOX = \"OPEN_READ_BOX\";\nexport const CLOSE_READ_BOX = \"CLOSE_READ_BOX\";\nexport const COLLAPSE_READ_BOX = \"COLLAPSE_READ_BOX\";\n","import * as actionTypes from \"./types\";\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: !state.isPanelCollapsed,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from \"./types\";\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\n      },\n    },\n    editBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from \"react\";\nimport { initialState, contextReducer } from \"./reducer\";\nimport contextActions from \"./actions\";\nimport contextSelectors from \"./selectors\";\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","import * as actionTypes from \"./types\";\nimport { request } from \"@/request\";\n\nexport const crud = {\n  resetState: () => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_STATE,\n    });\n  },\n  resetAction: (actionType) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_ACTION,\n      keyState: actionType,\n      payload: null,\n    });\n  },\n  currentItem: (data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ITEM,\n      payload: { ...data },\n    });\n  },\n  currentAction: (actionType, data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ACTION,\n      keyState: actionType,\n      payload: { ...data },\n    });\n  },\n  list: (entity, currentPage = 1) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"list\",\n      payload: null,\n    });\n\n    let data = await request.list(entity, { page: currentPage });\n\n    if (data.success === true) {\n      const result = {\n        items: data.result,\n        pagination: {\n          current: parseInt(data.pagination.page, 10),\n          pageSize: 10,\n          total: parseInt(data.pagination.count, 10),\n        },\n      };\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"list\",\n        payload: result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"list\",\n        payload: null,\n      });\n    }\n  },\n  create: (entity, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"create\",\n      payload: null,\n    });\n    let data = await request.create(entity, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"create\",\n        payload: data.result,\n      });\n\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"create\",\n        payload: null,\n      });\n    }\n  },\n  read: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"read\",\n      payload: null,\n    });\n\n    let data = await request.read(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"read\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"read\",\n        payload: null,\n      });\n    }\n  },\n  update: (entity, itemId, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"update\",\n      payload: null,\n    });\n\n    let data = await request.update(entity, itemId, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"update\",\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"update\",\n        payload: null,\n      });\n    }\n  },\n\n  delete: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"delete\",\n      payload: null,\n    });\n\n    let data = await request.delete(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"delete\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"delete\",\n        payload: null,\n      });\n    }\n  },\n\n  search: (entity, source, option) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"search\",\n      payload: null,\n    });\n\n    source.cancel();\n\n    source = request.source();\n    let data = await request.search(entity, source, option);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"search\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"search\",\n        payload: null,\n      });\n    }\n  },\n};\n","import { createSelector } from \"reselect\";\n\nconst selectCrud = (state) => state.crud;\n\nexport const selectCurrentItem = createSelector(\n  [selectCrud],\n  (crud) => crud.current\n);\n\nexport const selectListItems = createSelector(\n  [selectCrud],\n  (crud) => crud.list\n);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) =>\n    list.result.items.find((item) => item._id === itemId)\n  );\n\nexport const selectCreatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.create\n);\n\nexport const selectUpdatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.update\n);\n\nexport const selectReadItem = createSelector([selectCrud], (crud) => crud.read);\n\nexport const selectDeletedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.delete\n);\n\nexport const selectSearchedItems = createSelector(\n  [selectCrud],\n  (crud) => crud.search\n);\n","export default function uniqueId() {\n  // always start with a letter (for DOM friendlyness)\n  let idstr = String.fromCharCode(Math.floor(Math.random() * 25 + 65));\n  do {\n    // between numbers and characters (48 is 0 and 90 is Z (42-48 = 90)\n    const ascicodeChar = Math.floor(Math.random() * 25 + 65);\n    idstr += String.fromCharCode(ascicodeChar);\n    idstr += Math.floor(Math.random() * 99);\n  } while (idstr.length < 8);\n\n  return idstr;\n}\n","import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\n\nexport const login = (loginAdminData) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: { loading: true },\n  });\n  const data = await authService.login(loginAdminData);\n\n  if (data.success === true) {\n    console.log(data)\n    const authValue = {\n      current: data.result.admin,\n      loading: false,\n      isLoggedIn: true,\n      permissions: data.result.permissions\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.result.admin,\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS,\n  });\n  history.push(\"/login\");\n};\n","import React from \"react\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nexport default function Loading({ isLoading, children }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <Spin indicator={antIcon} spinning={isLoading}>\n      {children}\n    </Spin>\n  );\n}\n","import { parse } from \"querystring\";\nfunction getPageQuery() {\n  parse(window.location.href.split(\"?\")[1]);\n}\n\n/* \n To get nested object properties.\n admin = {\n    location: {\n        lat: 50,\n        long: 9\n    }\n }\n\n get(admin, 'location.lat')     // 50\n get(admin, 'location.foo.bar') // undefined\n*/\n\nexport function get(obj, key) {\n  return key.split(\".\").reduce(function (o, x) {\n    return o === undefined || o === null ? o : o[x];\n  }, obj);\n\n  // key.split('.').reduce(function(o, x) {\n  //     return (o === undefined || o === null) ? o : o[x];\n  //   }, obj);\n}\n\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n  s = s.replace(/^\\./, \"\"); // strip a leading dot\n  let a = s.split(\".\");\n  for (let i = 0, n = a.length; i < n; ++i) {\n    let k = a[i];\n    if (o !== null) {\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\n/* \n To check only if a property exists, without getting its value. It similer get function.\n*/\nexport function has(obj, key) {\n  return key.split(\".\").every(function (x) {\n    if (typeof obj !== \"object\" || obj === null || x in obj === false)\n      /// !x in obj or  x in obj === true *** if you find any bug\n      return false;\n    obj = obj[x];\n    return true;\n  });\n}\n\n/* \n convert indexes to properties\n*/\nexport function valueByString(obj, string, devider) {\n  if (devider === undefined) {\n    devider = \"|\";\n  }\n  return string\n    .split(devider)\n    .map(function (key) {\n      return get(obj, key);\n    })\n    .join(\" \");\n}\n\n/*\n Submit multi-part form using ajax.\n*/\nexport function toFormData(form) {\n  let formData = new FormData();\n  const elements = form.querySelectorAll(\"input, select, textarea\");\n  for (let i = 0; i < elements.length; ++i) {\n    const element = elements[i];\n    const name = element.name;\n\n    if (name && element.dataset.disabled !== \"true\") {\n      if (element.type === \"file\") {\n        const file = element.files[0];\n        formData.append(name, file);\n      } else {\n        const value = element.value;\n        if (value && value.trim()) {\n          formData.append(name, value);\n        }\n      }\n    }\n  }\n\n  return formData;\n}\n\n/*\n Format Date to display admin\n*/\nexport function formatDate(param) {\n  const date = new Date(param);\n  let day = date.getDate().toString();\n  let month = (date.getMonth() + 1).toString();\n  const year = date.getFullYear();\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  const fullDate = `${day}/${month}/${year}`;\n  return fullDate;\n}\n\n/*\n Format Datetime to display admin\n*/\nexport function formatDatetime(param) {\n  let time = new Date(param).toLocaleTimeString();\n  return formatDate(param) + \" \" + time;\n}\n\n/*\n Set object value in html\n*/\nexport function bindValue(obj, parentElement) {\n  parentElement.querySelectorAll(\"[data-property]\").forEach((element) => {\n    const type = element.dataset.type;\n    let value = valueByString(obj, element.dataset.property);\n    switch (type) {\n      case \"date\":\n        value = formatDate(value);\n        break;\n\n      case \"datetime\":\n        value = formatDatetime(value);\n        break;\n\n      case \"currency\":\n        value = value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n        break;\n\n      default:\n        break;\n    }\n    element.innerHTML = value;\n  });\n}\n\nexport default getPageQuery;\n","import React from \"react\";\n\nimport { CrudContextProvider } from \"@/context/crud\";\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","export default __webpack_public_path__ + \"static/media/adminimg.3c486505.png\";","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Layout, Avatar, Menu, Dropdown } from \"antd\";\n\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { logout } from \"@/redux/auth/actions\";\nimport uniqueId from \"@/utils/uniqueId\";\nimport adminimg from '../../assets/adminimg.png';\n\n\nconst { Header } = Layout;\n\nexport default function HeaderContent() {\n  const dispatch = useDispatch();\n // how to fetch data from database. kuki i want access of user's image and his email etc.\n\n  const menu = (\n    <div\n      style={{ border: \"1px solid black\", padding: \"20px\", display: \"flex\", margin: \"20px\" ,borderRadius:'15px',color:'white',boxShadow:'0px 0px 10px  #002140',background:'white'}}\n    >\n      <div style={{margin:'10px',marginRight:'20px',}}>\n        <img src={adminimg} style={{width:'100px',borderRadius:'100%'}} alt=\"adminimg\" />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" ,flexWrap:'wrap',justifyContent:'center',alignItems:'center'}}>\n        <h1 style={{ fontSize: 20, marginBottom: 20 }}>Hello Admin!</h1>\n        <button style={{border:'none',outline:'none',backgroundColor:'rgb(255 40 40',padding:'5px 10px'}} key={`${uniqueId()}`} onClick={() => dispatch(logout())}>\n          Logout\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <Header className=\"site-layout-background\" style={{ padding: 0, background: \"none\" }}>\n      <Dropdown overlay={menu} placement=\"bottomRight\" arrow trigger={[\"click\"]}>\n        <Avatar icon={<UserOutlined />} />\n      </Dropdown>\n    </Header>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"none\", opacity: 0 }\n    : { display: \"block\", opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n  isPanelCollapsed,\n}) {\n  const collapsed = isCollapsed ? \"collapsed\" : \"\";\n  const isDiplayed = isPanelCollapsed ? \"-400px\" : \"0px\";\n  return (\n    <div\n      className=\"panelBox\"\n      style={{ width: \"400px\", marginLeft: isDiplayed }}\n    >\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={\"collapseBox \" + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>\n          {bottomContent}\n        </BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { Layout } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport CollapseBox from \"../CollapseBox\";\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({\n  config,\n  topContent,\n  bottomContent,\n  fixHeaderPanel,\n}) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelCollapsed, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [styleSider, setStyleSider] = useState(\"0px\");\n  const [opacitySider, setOpacitySider] = useState(\"1\");\n\n  useEffect(() => {\n    if (isPanelCollapsed) {\n      setStyleSider(\"-400px\");\n      setOpacitySider(0);\n    } else {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }\n\n    setTimeout(() => {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }, 300);\n  }, [isPanelCollapsed]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      // trigger={<MenuOutlined className=\"\" />}\n      width={400}\n      collapsible\n      collapsed={isPanelCollapsed}\n      collapsedWidth={\"0px\"}\n      onCollapse={collapsePanel}\n      // zeroWidthTriggerStyle={{\n      //   right: \"-50px\",\n      //   top: \"15px\",\n      // }}\n      style={{\n        background: \"#FFF\",\n        left: styleSider,\n        opacity: opacitySider,\n      }}\n    >\n      {fixHeaderPanel}\n      <CollapseBox\n        buttonTitle={ADD_NEW_ENTITY}\n        isPanelCollapsed={isPanelCollapsed}\n        isCollapsed={isBoxCollapsed}\n        onCollapse={collapsePanelBox}\n        topContent={topContent}\n        bottomContent={bottomContent}\n      ></CollapseBox>\n    </Sider>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport SidePanel from \"@/components/SidePanel\";\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <DefaultLayout>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SidePanel\n          config={config}\n          topContent={sidePanelTopContent}\n          bottomContent={sidePanelBottomContent}\n          fixHeaderPanel={fixHeaderPanel}\n        ></SidePanel>\n        <Layout className=\"site-layout\">\n          <HeaderContent />\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: \"50px 40px\",\n              margin: \"50px auto\",\n              width: \"100%\",\n              maxWidth: \"1000px\",\n            }}\n          >\n            {children}\n          </Content>\n        </Layout>\n      </Layout>\n    </DefaultLayout>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      <HeaderContent />\n      <Content\n        style={{\n          padding: \"30px 40px\",\n          margin: \"20px auto\",\n          width: \"100%\",\n          maxWidth:'1300px'\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCreatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nconst permissions = JSON.parse(localStorage.getItem('auth')).permissions;\n\nexport default function CreateForm({ config, formElements, setForm }) {\n\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const [form] = Form.useForm();\n\n\n\n  const onSubmit = (fieldsValue) => {\n    dispatch(crud.create(entity, fieldsValue));\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"create\"));\n      dispatch(crud.list(entity));\n    }\n    if (entity == \"job\") {\n      setForm(form);\n    }\n  }, [isSuccess]);\n\n  return (\n    <Loading isLoading={isLoading}>\n      {permissions == 'superadmin' || permissions['create'].includes(entity == 'product' ? 'service' : entity) ?\n        (<Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n          {formElements}\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>) :\n        (<>You don't have authorization to create new {(entity == 'product') ? 'services' : { entity }}</>)}\n    </Loading>\n  );\n}\n","// import React, { useEffect } from \"react\";\n// import dayjs from \"dayjs\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { crud } from \"@/redux/crud/actions\";\n// import { useCrudContext } from \"@/context/crud\";\n// import { selectUpdatedItem } from \"@/redux/crud/selectors\";\n\n// import { Button, Form } from \"antd\";\n// import Loading from \"@/components/Loading\";\n\n// const permissions = JSON.parse(localStorage.getItem(\"auth\")).permissions;\n\n// export default function UpdateForm({ config, formElements }) {\n//   let { entity } = config;\n//   const dispatch = useDispatch();\n//   const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n\n//   const { state, crudContextAction } = useCrudContext();\n//   const { panel, collapsedBox, readBox } = crudContextAction;\n\n//   const [form] = Form.useForm();\n\n//   const onSubmit = (fieldsValue) => {\n//     if (fieldsValue) {\n//       const initials = `${fieldsValue.title.charAt(\n//         0\n//       )}${fieldsValue.client.charAt(0)}`; // Replace \"field1\" and \"field2\" with the actual fields you want to use\n//       const randomNumber = generateRandomNumber(); // Call the utility function to generate a random number\n//       const uniqueId = `${initials}${randomNumber}`;\n\n//       // Add the unique ID to the fieldsValue object\n//       fieldsValue = {\n//         ...fieldsValue,\n//         uniqueId,\n//       };\n\n//       if (fieldsValue.birthday) {\n//         fieldsValue = {\n//           ...fieldsValue,\n//           birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n//         };\n//       }\n//       if (fieldsValue.date) {\n//         fieldsValue = {\n//           ...fieldsValue,\n//           birthday: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n//         };\n//       }\n//     }\n\n//     const id = current._id;\n//     dispatch(crud.update(entity, id, fieldsValue));\n//   };\n//   useEffect(() => {\n//     if (current) {\n//       if (current.birthday) {\n//         current.birthday = dayjs(current.birthday);\n//       }\n//       if (current.date) {\n//         current.date = dayjs(current.date);\n//       }\n//       form.setFieldsValue(current);\n//     }\n//   }, [current]);\n\n//   useEffect(() => {\n//     if (isSuccess) {\n//       readBox.open();\n//       collapsedBox.open();\n//       panel.open();\n//       form.resetFields();\n//       dispatch(crud.resetAction(\"update\"));\n//       dispatch(crud.list(entity));\n//     }\n//   }, [isSuccess]);\n\n//   const { isEditBoxOpen } = state;\n\n//   const show = isEditBoxOpen\n//     ? { display: \"block\", opacity: 1 }\n//     : { display: \"none\", opacity: 0 };\n//   return (\n//     <div style={show}>\n//       <Loading isLoading={isLoading}>\n//         {permissions == \"superadmin\" ||\n//         permissions[\"update\"].includes(\n//           entity == \"product\" ? \"service\" : entity\n//         ) ? (\n//           <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n//             {formElements}\n//             <Form.Item>\n//               <Button type=\"primary\" htmlType=\"submit\">\n//                 Submit\n//               </Button>\n//             </Form.Item>\n//           </Form>\n//         ) : (\n//           <>\n//             You don't have authorization to update{\" \"}\n//             {entity == \"product\" ? \"services\" : { entity }}\n//           </>\n//         )}\n//       </Loading>\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nconst permissions = JSON.parse(localStorage.getItem('auth')).permissions;\n\nexport default function UpdateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n\n  const { state, crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  const [form] = Form.useForm();\n  const [uniqueId, setUniqueId] = useState('');\n\n  const onSubmit = async (fieldsValue) => {\n    if (fieldsValue) {\n      // Generate unique ID based on field values\n      const initials = `${fieldsValue.field1.charAt(0)}${fieldsValue.field2.charAt(0)}`;\n      const randomNumber = Math.floor(Math.random() * 10000);\n      const generatedUniqueId = `${initials}${randomNumber}`;\n\n      fieldsValue = {\n        ...fieldsValue,\n        uniqueId: generatedUniqueId,\n      };\n\n      const id = current._id;\n      await dispatch(crud.update(entity, id, fieldsValue));\n    }\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"update\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  useEffect(() => {\n    if (current) {\n      if (current.birthday) {\n        current.birthday = dayjs(current.birthday);\n      }\n      if (current.date) {\n        current.date = dayjs(current.date);\n      }\n      form.setFieldsValue(current);\n\n      if (current.uniqueId) {\n        setUniqueId(current.uniqueId);\n      }\n    }\n  }, [current]);\n\n  const { isEditBoxOpen } = state;\n  const show = isEditBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  const handleStorageLogic = () => {\n    // Perform the storage logic here, e.g., dispatch an action or make an API request\n    console.log(\"Storing unique ID:\", uniqueId);\n  };\n\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        {(permissions === 'superadmin' || permissions['update'].includes(entity === 'product' ? 'service' : entity)) ?\n          (\n            <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n              {formElements}\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          ) :\n          (\n            <>\n              You don't have authorization to update {(entity === 'product') ? 'services' : entity}\n            </>\n          )\n        }\n      </Loading>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"antd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectDeletedItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function DeleteModal({ config }) {\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = \"Do you want delete : \",\n    modalTitle = \"Remove Item\",\n  } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { isModalOpen } = state;\n  const { modal } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState(\"\");\n\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list(entity));\n      dispatch(crud.resetAction(entity));\n    }\n    if (current) {\n      let labels = entityDisplayLabels\n        .map((x) => valueByString(current, x))\n        .join(\" \");\n\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current._id;\n    dispatch(crud.delete(entity, id));\n  };\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n  return (\n    <Modal\n      title={modalTitle}\n      visible={isModalOpen}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={isLoading}\n    >\n      <p>\n        {deleteMessage}\n        {displayItem}\n      </p>\n    </Modal>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCurrentItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function ReadItem({ config }) {\n  let { readColumns } = config;\n  const { result: currentResult } = useSelector(selectCurrentItem);\n  const { state } = useCrudContext();\n  const { isReadBoxOpen } = state;\n  const [listState, setListState] = useState([]);\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map((props) => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const value = valueByString(currentResult, propsKey);\n      list.push({ propsKey, label: propsTitle, value: value });\n    });\n    setListState(list);\n  }, [currentResult]);\n\n  const show = isReadBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  const itemsList = listState.map((item) => {\n    return (\n      <Row key={item.propsKey} gutter={12}>\n        <Col className=\"gutter-row\" span={8}>\n          <p>{item.label}</p>\n        </Col>\n        <Col className=\"gutter-row\" span={2}>\n          <p> : </p>\n        </Col>\n        <Col className=\"gutter-row\" span={14}>\n          <p>{item.value}</p>\n        </Col>\n      </Row>\n    );\n  });\n\n  return <div style={show}>{itemsList}</div>;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { AutoComplete, Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { request } from \"@/request\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectSearchedItems } from \"@/redux/crud/selectors\";\n\nimport { Empty } from \"antd\";\n\nexport default function SearchItem({ config }) {\n  let { entity, searchConfig } = config;\n\n  const { displayLabels, searchFields, outputValue = \"_id\" } = searchConfig;\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const [options, setOptions] = useState([]);\n\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  let source = request.source();\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\n\n  const isTyping = useRef(false);\n\n  let delayTimer = null;\n  useEffect(() => {\n    isLoading && setOptions([{ label: \"... Searching\" }]);\n  }, [isLoading]);\n  const onSearch = (searchText) => {\n    isTyping.current = true;\n\n    clearTimeout(delayTimer);\n    delayTimer = setTimeout(function () {\n      if (isTyping.current && searchText !== \"\") {\n        dispatch(\n          crud.search(entity, source, {\n            question: searchText,\n            fields: searchFields,\n          })\n        );\n      }\n      isTyping.current = false;\n    }, 500);\n  };\n\n  const onSelect = (data) => {\n    const currentItem = result.find((item) => {\n      return item[outputValue] === data;\n    });\n\n    dispatch(crud.currentItem(currentItem));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n\n  const onChange = (data) => {\n    const currentItem = options.find((item) => {\n      return item.value === data;\n    });\n    const currentValue = currentItem ? currentItem.label : data;\n    setValue(currentValue);\n  };\n\n  useEffect(() => {\n    let optionResults = [];\n\n    result.map((item) => {\n      const labels = displayLabels.map((x) => item[x]).join(\" \");\n      optionResults.push({ label: labels, value: item[outputValue] });\n    });\n\n    setOptions(optionResults);\n  }, [result]);\n\n  return (\n    <AutoComplete\n      value={value}\n      options={options}\n      style={{\n        width: \"100%\",\n      }}\n      onSelect={onSelect}\n      onSearch={onSearch}\n      onChange={onChange}\n      notFoundContent={!isSuccess ? <Empty /> : \"\"}\n      allowClear={true}\n      placeholder=\"Your Search here\"\n    >\n      <Input suffix={<SearchOutlined />} />\n    </AutoComplete>\n  );\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { Dropdown, Button, PageHeader, Table } from \"antd\";\n\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectListItems } from \"@/redux/crud/selectors\";\n\nimport uniqueId from \"@/utils/uniqueId\";\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  let { entity, dataTableColumns, dataTableTitle } = config;\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: \"\",\n      render: (row) => (\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={[\"click\"]}>\n          <EllipsisOutlined style={{ cursor: \"pointer\", fontSize: \"24px\" }} />\n        </Dropdown>\n      ),\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } = useSelector(\n    selectListItems\n  );\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    dispatch(crud.list(entity, pagination.current));\n  }, []);\n\n  useEffect(() => {\n    dispatch(crud.list(entity));\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: \"20px 0px\",\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport { Button, Menu } from \"antd\";\nimport { EyeOutlined, EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectItemById } from \"@/redux/crud/selectors\";\nimport { useCrudContext } from \"@/context/crud\";\nimport uniqueId from \"@/utils/uniqueId\";\nimport DataTable from \"@/components/DataTable\";\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, modal, readBox, editBox } = crudContextAction;\n  const item = useSelector(selectItemById(row._id));\n  const Show = () => {\n    dispatch(crud.currentItem(item));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentAction(\"update\", item));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction(\"delete\", item));\n    modal.open();\n  }\n  return (\n    <Menu style={{ width: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item\n        key={`${uniqueId()}`}\n        icon={<DeleteOutlined />}\n        onClick={Delete}\n      >\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function CrudDataTable({ config }) {\n  return (\n    <DataTable\n      config={config}\n      DropDownRowMenu={DropDownRowMenu}\n      AddNewItem={AddNewItem}\n    />\n  );\n}\n","import React, { useLayoutEffect } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport CreateForm from \"@/components/CreateForm\";\nimport UpdateForm from \"@/components/UpdateForm\";\nimport DeleteModal from \"@/components/DeleteModal\";\nimport ReadItem from \"@/components/ReadItem\";\nimport SearchItem from \"@/components/SearchItem\";\n\nimport { useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\n\nimport { CrudLayout } from \"@/layout\";\n\nimport CrudDataTable from \"./CrudDataTable\";\nimport { useEffect } from \"react\";\n\nfunction SidePanelTopContent({ config, formElements }) {\n  return (\n    <>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n\n  const { collapsedBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n  useEffect(() => {\n    crudContextAction.panel.close();\n  }, []);\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>\n            {config.panelTitle}\n          </h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button\n            onClick={addNewItem}\n            block={true}\n            icon={<PlusOutlined />}\n          ></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default function CrudModule({ config, createForm, updateForm, setForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={\n        <CreateForm config={config} formElements={createForm} setForm={setForm} />\n      }\n      sidePanelTopContent={\n        <SidePanelTopContent config={config} formElements={updateForm} />\n      }\n    >\n      <CrudDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n","import React from \"react\";\nimport { request } from \"@/request\";\nimport { Button, Form, Input, Select, Space } from \"antd\";\nconst { Option } = Select;\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport useFetch from \"@/hooks/useFetch\";\nimport { API_BASE_URL } from \"@/config/serverApiConfig\";\n\nconst url = API_BASE_URL;\nexport default function CustomerForm({ isUpdateForm = false }) {\n  const [panCardImg, setPanCardImg] = useState();\n  const [adharCardImg, setAdharCardImg] = useState();\n  const [vendorImg, setVendorImg] = useState();\n  const [gstImg, setGstImg] = useState();\n  const [chequeImg, setChequeImg] = useState();\n  const [PostOffice, setPostOffice] = useState([]);\n  const [ifscCode, setIfscCode] = useState({});\n  const { result, isLoading, isSuccess } = useFetch(() =>\n    request.list(\"product\", {})\n  );\n\n  useEffect(() => {}, [panCardImg, adharCardImg, vendorImg, gstImg, chequeImg]);\n\n  const uploadImage = (e, img) => {\n    var data = new FormData();\n    data.append(\"file\", e.target.files[0]);\n    console.log(e)\n    request\n      .post(\"/files/upload\", data)\n      .then((res) => {\n        console.log(res)\n        const path = res.result.path\n          .replaceAll('\\\\', \"/\")\n          .replace(\"public\", \"\");\n        setImages(img, path);\n        console.log(path);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handlePincode = (e) => {\n    if (e.target.value >= 6) {\n      axios\n        .get(`https://api.postalpincode.in/pincode/${e.target.value}`)\n        .then((res) => {\n          if (\n            res.data.data.PostOffice !== null &&\n            res.data.data.PostOffice !== undefined\n          ) {\n            setPostOffice({\n              District: res.data.data.PostOffice[0].District,\n              State: res.data.data.PostOffice[0].State,\n            });\n          }\n          console.log(res.data.data.PostOffice[0]);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n    {\n      PostOffice.map((item) => {\n        const { State, District } = item;\n        return (\n          <>\n            <div key={State}>{District}</div>\n          </>\n        );\n      });\n    }\n  };\n  const [selectedServices, setSelectedServices] = useState([]);\n\n  const handleSelectChange = (values) => {\n    setSelectedServices(values);\n  };\n\n  const handleCustomServiceChange = (value) => {\n    if (!selectedServices.includes(value) && value !== \"\") {\n      setSelectedServices([...selectedServices, value]);\n    }\n  };\n\n  const options = [\n    { _id: 1, productName: \"Design\" },\n    { _id: 2, productName: \"Audit\" },\n    { _id: 3, productName: \"R&M\" },\n    { _id: 4, productName: \"Project\" },\n  ];\n  const handleIfsc = (e) => {\n    if (e.target.value.length >= 11) {\n      axios\n        .get(`https://ifsc.razorpay.com/${e.target.value}`)\n        .then((res) => {\n          if (res.data !== null && res.data !== undefined) {\n            setIfscCode({\n              BANK: res.data.BANK,\n              BRANCH: res.data.BRANCH,\n            });\n          }\n          console.log(res.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  const setImages = (img, path) => {\n    console.log(`Image server path->>${url}${path}`);\n    switch (img) {\n      case \"adhar\":\n        setAdharCardImg(`${url}${path}`);\n        break;\n      case \"pan\":\n        setPanCardImg(`${url}${path}`);\n        break;\n      case \"gst\":\n        setGstImg(`${url}${path}`);\n        break;\n      case \"cheque\":\n        setChequeImg(`${url}${path}`);\n        break;\n      default:\n        setVendorImg(`${url}${path}`);\n        break;\n    }\n  };\n\n  return (\n    <>\n      <h1 style={{ fontSize: \"20px\", textAlign: \"center\", color: \"seagreen\" }}>\n        Company Details\n      </h1>\n      <Form.Item\n        label=\"Service\"\n        name=\"service\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Vendor Service!\",\n          },\n        ]}\n      >\n        <Select\n          mode=\"tags\"\n          placeholder=\"---Select or add custom service---\"\n          optionLabelProp=\"label\"\n        >\n          {result &&\n            result.length > 0 &&\n            result.map((service) => {\n              const name = service.productName;\n              return (\n                <Option key={service._id} value={name} label={name}>\n                  <Space>{name}</Space>\n                </Option>\n              );\n            })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label=\"Vendor First Name\"\n        name=\"vendorname\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your FirstName!\",\n          },\n        ]}\n        style={{\n          paddingRight: \"5px\",\n        }}\n      >\n        <Input type=\"text\" />\n      </Form.Item>\n      <Form.Item\n        label=\"Vendor Last Name\"\n        name=\"surname\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your vendor Lastname!\",\n          },\n        ]}\n        style={{\n          paddingLeft: \"5px\",\n        }}\n      >\n        <Input type=\"text\" />\n      </Form.Item>\n      <Form.Item\n        label=\"Departments\"\n        name=\"departments\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Select\n          mode=\"tags\"\n          placeholder=\"---Select or add custom service---\"\n          optionLabelProp=\"label\"\n          value={selectedServices}\n          onChange={handleSelectChange}\n          \n        >\n          {options.map((service) => {\n            const name = service.productName;\n            return (\n              <Option key={service._id} value={name} label={name}>\n                <Space>{name}</Space>\n              </Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label=\"Phone\"\n        name=\"phone\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your phone number!\",\n          },\n        ]}\n      >\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item label=\" Alternative Phone No.\" name=\"alternatephone\">\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item\n        label=\"E-mail\"\n        name=\"email\"\n        rules={[\n          {\n            type: \"email\",\n            message: \"The input is not valid E-mail!\",\n          },\n          {\n            required: true,\n            message: \"Please input your E-mail!\",\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <h1 style={{ fontSize: \"20px\", textAlign: \"center\", color: \"seagreen\" }}>\n        Bank Details\n      </h1>\n      <Form.Item\n        label=\" Account Holder Name \"\n        name=\"holdername\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input account holder name!\",\n          },\n        ]}\n      >\n        <Input type=\"text\" />\n      </Form.Item>\n      <Form.Item\n        label=\" Account No. \"\n        name=\"account\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input type=\"number\" />\n      </Form.Item>\n      <Form.Item label=\"Name of The Bank\" name=\"bankname\">\n        <div\n          style={{\n            marginLeft: \"6px\",\n            border: \" 1px solid grey\",\n            padding: \"10px\",\n          }}\n        >\n          {ifscCode.BANK}\n        </div>\n      </Form.Item>\n      <Form.Item label=\"Branch Name \" name=\"branchname\">\n        <div\n          style={{\n            marginLeft: \"6px\",\n            border: \" 1px solid grey\",\n            padding: \"10px\",\n          }}\n        >\n          <p disabled>{ifscCode.BRANCH}</p>\n        </div>\n      </Form.Item>\n      <Form.Item\n        label=\" IFSC Code \"\n        name=\"code\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your area code!\",\n          },\n        ]}\n      >\n        <Input type=\"text\" onChange={(e) => handleIfsc(e)} />\n      </Form.Item>\n      <Form.Item\n        label=\"Location Service State\"\n        name=\"state\"\n        style={{\n          display: \"inline-block\",\n          width: \"calc(50%)\",\n          paddingRight: \"7px\",\n        }}\n      >\n        <div\n          style={{\n            marginLeft: \"6px\",\n            border: \" 1px solid grey\",\n            padding: \"10px\",\n          }}\n        >\n          <p disabled>{PostOffice.State}</p>\n        </div>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Location Service District\"\n        name=\"district\"\n        style={{\n          display: \"inline-block\",\n          width: \"calc(50%)\",\n          paddingLeft: \"5px\",\n        }}\n      >\n        <div\n          style={{\n            marginLeft: \"6px\",\n            border: \" 1px solid grey\",\n            padding: \"10px\",\n          }}\n        >\n          <p disabled>{PostOffice.District}</p>\n        </div>\n      </Form.Item>\n      <Form.Item\n        label=\"Pincode\"\n        name=\"pincode\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your area Pincode!\",\n          },\n        ]}\n      >\n        <Input type=\"number\" onChange={(e) => handlePincode(e)} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Adhaar No.\"\n        name=\"adhaarnumber\"\n        rules={[\n          {\n            required: true,\n            max:16,\n            message: \"Maximum digits 16!\",\n          },\n        ]}\n        style={{\n          display: \"inline-block\",\n          width: \"calc(50%)\",\n          paddingRight: \"5px\",\n        }}\n      >\n        <Input type=\"number\" />\n      </Form.Item>\n      {adharCardImg === undefined ? (\n        <Form.Item\n          label=\" Upload Adhaar card\"\n          name=\"adhaarphoto\"\n          rules={[\n            {\n              required: true,\n              message: \"Please Upload your Adhaar card photo!\",\n            },\n          ]}\n          style={{\n            display: \"inline-block\",\n            width: \"calc(50%)\",\n            paddingLeft: \"5px\",\n          }}\n        >\n          <Input type=\"file\" onChange={(e) => uploadImage(e, \"adhar\")} />\n        </Form.Item>\n      ) : null}\n      <div\n          style={{\n            height: 50,\n            width: 100,\n            backgroundImage: \"url(\" + adharCardImg + \")\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n          }}\n        ></div>\n\n      <Form.Item\n        label=\"Pan No.\"\n        name=\"pannumber\"\n        rules={[\n          {\n            required: true,\n            message: \"Please type your Pan number!\",\n          },\n        ]}\n        style={{\n          display: \"inline-block\",\n          width: \"calc(50%)\",\n          paddingRight: \"5px\",\n        }}\n      >\n        <Input type=\"text\" />\n      </Form.Item>\n\n      {panCardImg === undefined ? (\n        <Form.Item\n          label=\" Upload Pan card\"\n          name=\"uploadpan\"\n          rules={[\n            {\n              required: true,\n              message: \"Please Upload your Pan card photo!\",\n            },\n          ]}\n          style={{\n            display: \"inline-block\",\n            width: \"calc(50%)\",\n            paddingLeft: \"5px\",\n          }}\n        >\n          <Input type=\"file\" onChange={(e) => uploadImage(e, \"pan\")} />\n        </Form.Item>\n      ) : null}\n\n      \n      {gstImg === undefined ? (\n        <Form.Item label=\" GST Certificate\" name=\"gstupload\">\n          <Input type=\"file\" onChange={(e) => uploadImage(e, \"gst\")} />\n        </Form.Item>\n      ) : null}\n      <div\n        style={{\n          height: 50,\n          width: 100,\n          backgroundImage: \"url(\" + gstImg + \")\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n        }}\n      ></div>\n      {vendorImg === undefined ? (\n        <Form.Item\n          label=\" Vendor Photo Attachment\"\n          name=\"vendorupload\"\n          rules={[\n            {\n              required: true,\n              message: \"Please attach vendor photo!\",\n            },\n          ]}\n        >\n          <Input type=\"file\" onChange={(e) => uploadImage(e, \"vendor\")} />\n        </Form.Item>\n      ) : null}\n      <div\n        style={{\n          height: 50,\n          width: 100,\n          backgroundImage: \"url(\" + vendorImg + \")\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n        }}\n      ></div>\n\n      {chequeImg === undefined ? (\n        <Form.Item\n          label=\" Cancelled Cheque or Passbook \"\n          name=\"chequeupload\"\n          rules={[\n            {\n              required: true,\n              message: \"Please Upload your Cancelled Cheque or Passbookn !\",\n            },\n          ]}\n        >\n          <Input type=\"file\" onChange={(e) => uploadImage(e, \"cheque\")} />\n        </Form.Item>\n      ) : null}\n      <div\n        style={{\n          height: 50,\n          width: 100,\n          backgroundImage: \"url(\" + chequeImg + \")\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n        }}\n      ></div>\n\n     \n      \n    </>\n  );\n}\n","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { SpaceContext } from '.';\nexport default function Item(_ref) {\n  var className = _ref.className,\n      direction = _ref.direction,\n      index = _ref.index,\n      marginDirection = _ref.marginDirection,\n      children = _ref.children,\n      split = _ref.split,\n      wrap = _ref.wrap;\n\n  var _React$useContext = React.useContext(SpaceContext),\n      horizontalSize = _React$useContext.horizontalSize,\n      verticalSize = _React$useContext.verticalSize,\n      latestIndex = _React$useContext.latestIndex,\n      supportFlexGap = _React$useContext.supportFlexGap;\n\n  var style = {};\n\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = _extends(_extends({}, index < latestIndex && _defineProperty({}, marginDirection, horizontalSize / (split ? 2 : 1))), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n\n  if (children === null || children === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(className, \"-split\"),\n    style: style\n  }, split));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { ConfigContext } from '../config-provider';\nimport Item from './Item';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nexport var SpaceContext = /*#__PURE__*/React.createContext({\n  latestIndex: 0,\n  horizontalSize: 0,\n  verticalSize: 0,\n  supportFlexGap: false\n});\nvar spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\n\nfunction getNumberSize(size) {\n  return typeof size === 'string' ? spaceSize[size] : size || 0;\n}\n\nvar Space = function Space(props) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      space = _React$useContext.space,\n      directionConfig = _React$useContext.direction;\n\n  var _props$size = props.size,\n      size = _props$size === void 0 ? (space === null || space === void 0 ? void 0 : space.size) || 'small' : _props$size,\n      align = props.align,\n      className = props.className,\n      children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'horizontal' : _props$direction,\n      customizePrefixCls = props.prefixCls,\n      split = props.split,\n      style = props.style,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? false : _props$wrap,\n      otherProps = __rest(props, [\"size\", \"align\", \"className\", \"children\", \"direction\", \"prefixCls\", \"split\", \"style\", \"wrap\"]);\n\n  var supportFlexGap = useFlexGapSupport();\n\n  var _React$useMemo = React.useMemo(function () {\n    return (Array.isArray(size) ? size : [size, size]).map(function (item) {\n      return getNumberSize(item);\n    });\n  }, [size]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      horizontalSize = _React$useMemo2[0],\n      verticalSize = _React$useMemo2[1];\n\n  var childNodes = toArray(children, {\n    keepEmpty: true\n  });\n  var mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  var prefixCls = getPrefixCls('space', customizePrefixCls);\n  var cn = classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(direction), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), directionConfig === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-align-\").concat(mergedAlign), mergedAlign), _classNames), className);\n  var itemClassName = \"\".concat(prefixCls, \"-item\");\n  var marginDirection = directionConfig === 'rtl' ? 'marginLeft' : 'marginRight'; // Calculate latest one\n\n  var latestIndex = 0;\n  var nodes = childNodes.map(function (child, i) {\n    if (child !== null && child !== undefined) {\n      latestIndex = i;\n    }\n    /* eslint-disable react/no-array-index-key */\n\n\n    return /*#__PURE__*/React.createElement(Item, {\n      className: itemClassName,\n      key: \"\".concat(itemClassName, \"-\").concat(i),\n      direction: direction,\n      index: i,\n      marginDirection: marginDirection,\n      split: split,\n      wrap: wrap\n    }, child);\n    /* eslint-enable */\n  });\n  var spaceContext = React.useMemo(function () {\n    return {\n      horizontalSize: horizontalSize,\n      verticalSize: verticalSize,\n      latestIndex: latestIndex,\n      supportFlexGap: supportFlexGap\n    };\n  }, [horizontalSize, verticalSize, latestIndex, supportFlexGap]); // =========================== Render ===========================\n\n  if (childNodes.length === 0) {\n    return null;\n  }\n\n  var gapStyle = {};\n\n  if (wrap) {\n    gapStyle.flexWrap = 'wrap'; // Patch for gap not support\n\n    if (!supportFlexGap) {\n      gapStyle.marginBottom = -verticalSize;\n    }\n  }\n\n  if (supportFlexGap) {\n    gapStyle.columnGap = horizontalSize;\n    gapStyle.rowGap = verticalSize;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: cn,\n    style: _extends(_extends({}, gapStyle), style)\n  }, otherProps), /*#__PURE__*/React.createElement(SpaceContext.Provider, {\n    value: spaceContext\n  }, nodes));\n};\n\nexport default Space;","import React from \"react\";\nimport CrudModule from \"@/modules/CrudModule\";\nimport CustomerForm from \"@/forms/CustomerForm\";\n\nfunction Customer() {\n  const entity = \"vendor\";\n  const searchConfig = {\n    displayLabels: [\"company\", \"surname\", \"vendorname\"],\n    searchFields: \"service,surname,vendorname\",\n    outputValue: \"_id\",\n  };\n\n  const panelTitle = \"Vendor Panel\";\n  const dataTableTitle = \"Vendor Lists\";\n  const entityDisplayLabels = [\"service\"];\n  const readColumns = [\n    {\n      title: \"Vendor Name\",\n      dataIndex: \"vendorname\",\n    },\n    {\n      title: \"Vendor Surname\",\n      dataIndex: \"surname\",\n    },\n    {\n      title: \"Service\",\n      dataIndex: \"service\",\n    },\n    {\n      title: \"Alternative Phone\",\n      dataIndex: \"alternatephone\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"Phone\",\n      dataIndex: \"phone\",\n    },\n  ];\n  const dataTableColumns = [\n    {\n      title: \"Vendor Name\",\n      dataIndex: \"vendorname\",\n    },\n    {\n      title: \"Vendor Surname\",\n      dataIndex: \"surname\",\n    },\n    {\n      title: \"Service\",\n      dataIndex: \"service\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"Phone\",\n      dataIndex: \"phone\",\n    },\n  ];\n  const ADD_NEW_ENTITY = \"Add New Vendor\";\n  const DATATABLE_TITLE = \"Vendor List\";\n  const ENTITY_NAME = \"vendor\";\n  const CREATE_ENTITY = \"Create Vendor\";\n  const UPDATE_ENTITY = \"Update Vendor\";\n  const config = {\n    entity,\n    panelTitle,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <CrudModule\n      createForm={<CustomerForm />}\n      updateForm={<CustomerForm isUpdateForm={true} />}\n      config={config}\n    />\n  );\n}\nexport default Customer;\n"],"sourceRoot":""}