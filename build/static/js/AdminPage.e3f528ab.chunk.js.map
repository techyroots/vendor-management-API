{"version":3,"sources":["context/crud/types.jsx","context/crud/reducer.jsx","context/crud/actions.jsx","context/crud/selectors.jsx","context/crud/index.jsx","redux/crud/actions.js","redux/crud/selectors.js","utils/uniqueId.js","redux/auth/actions.js","components/Loading/index.jsx","utils/helpers.js","layout/DefaultLayout/index.jsx","assets/adminimg.png","layout/HeaderContent/index.jsx","components/CollapseBox/index.jsx","components/SidePanel/index.jsx","layout/CrudLayout/index.jsx","layout/DashboardLayout/index.jsx","components/CreateForm/index.jsx","components/UpdateForm/index.jsx","components/DeleteModal/index.jsx","components/ReadItem/index.jsx","components/SearchItem/index.jsx","components/DataTable/index.jsx","../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js","modules/AdminCrudModule/AdminDataTable.jsx","modules/AdminCrudModule/UpdatePassword.jsx","hooks/useOnFetch/index.jsx","modules/AdminCrudModule/index.jsx","forms/AdminForm.jsx","pages/Admin.jsx"],"names":["OPEN_MODAL","CLOSE_MODAL","OPEN_ADVANCED_BOX","CLOSE_ADVANCED_BOX","OPEN_EDIT_BOX","CLOSE_EDIT_BOX","OPEN_PANEL","CLOSE_PANEL","COLLAPSE_PANEL","OPEN_BOX","CLOSE_BOX","COLLAPSE_BOX","OPEN_READ_BOX","CLOSE_READ_BOX","COLLAPSE_READ_BOX","initialState","isModalOpen","isPanelCollapsed","isBoxCollapsed","isReadBoxOpen","isAdvancedBoxOpen","isEditBoxOpen","contextReducer","state","action","type","actionTypes","Error","contextActions","dispatch","modal","open","close","advancedBox","editBox","panel","collapse","collapsedBox","readBox","contextSelectors","isPanelOpen","isBoxOpen","CrudContext","createContext","CrudContextProvider","children","useReducer","value","useMemo","Provider","useCrudContext","context","useContext","undefined","crudContextAction","crudContextSelector","crud","resetState","resetAction","actionType","keyState","payload","currentItem","data","currentAction","list","entity","currentPage","request","page","success","result","items","pagination","current","parseInt","pageSize","total","count","create","jsonData","read","itemId","update","delete","search","source","option","cancel","selectCrud","selectCurrentItem","createSelector","selectListItems","selectItemById","find","item","_id","selectCreatedItem","selectUpdatedItem","selectDeletedItem","selectSearchedItems","uniqueId","idstr","String","fromCharCode","Math","floor","random","ascicodeChar","length","login","loginAdminData","loading","authService","console","log","authValue","admin","isLoggedIn","permissions","storePersist","set","history","push","logout","Loading","isLoading","antIcon","style","fontSize","spin","indicator","spinning","valueByString","obj","string","devider","split","map","key","reduce","o","x","get","join","Object","byString","s","a","replace","i","n","k","DefaultLayout","Header","Layout","HeaderContent","useDispatch","menu","border","padding","display","margin","borderRadius","color","boxShadow","background","marginRight","src","adminimg","width","alt","flexDirection","flexWrap","justifyContent","alignItems","marginBottom","outline","backgroundColor","onClick","className","overlay","placement","arrow","trigger","icon","UserOutlined","CollapseBoxButton","onChange","title","TopCollapseBox","isOpen","show","opacity","span","BottomCollapseBox","CollapseBox","topContent","bottomContent","buttonTitle","isCollapsed","onCollapse","collapsed","isDiplayed","marginLeft","Sider","SidePanel","config","fixHeaderPanel","ADD_NEW_ENTITY","useState","styleSider","setStyleSider","opacitySider","setOpacitySider","useEffect","setTimeout","collapsible","collapsedWidth","left","Content","CrudLayout","sidePanelTopContent","sidePanelBottomContent","minHeight","maxWidth","DashboardLayout","JSON","parse","localStorage","getItem","CreateForm","formElements","setForm","useSelector","isSuccess","Form","useForm","form","resetFields","includes","layout","onFinish","fieldsValue","Item","htmlType","UpdateForm","setUniqueId","onSubmit","initials","field1","charAt","field2","randomNumber","generatedUniqueId","id","birthday","dayjs","date","setFieldsValue","DeleteModal","entityDisplayLabels","deleteMessage","modalTitle","displayItem","setDisplayItem","labels","visible","onOk","onCancel","confirmLoading","ReadItem","readColumns","currentResult","listState","setListState","isFirstRun","useRef","props","propsKey","dataIndex","propsTitle","label","itemsList","gutter","SearchItem","searchConfig","displayLabels","searchFields","outputValue","setValue","options","setOptions","isTyping","delayTimer","optionResults","onSelect","onSearch","searchText","clearTimeout","question","fields","currentValue","notFoundContent","allowClear","placeholder","suffix","DataTable","DropDownRowMenu","AddNewItem","dataTableColumns","dataTableTitle","render","row","cursor","listResult","listIsLoading","handelDataTableLoad","useCallback","onBack","window","back","ghost","extra","columns","rowKey","dataSource","LockOutlined","ref","React","AntdIcon","_objectSpread","LockOutlinedSvg","displayName","minWidth","EyeOutlined","EditOutlined","DeleteOutlined","AdminCrudModule","UpdatePassword","setResult","setIsSuccess","setIsLoading","onFetch","fetchingFn","useOnFetch","patch","name","rules","required","message","len","prefix","autoComplete","SidePanelTopContent","FixHeaderPanel","panelTitle","block","PlusOutlined","createForm","updateForm","useLayoutEffect","Option","Select","AdminForm","isUpdateForm","roles","setRoles","admins","setAdmins","fetchedRoles","useFetch","fetchedAdmins","capitalize","surname","mode","role","rolename","toUpperCase","substring","Admin","adminList","ENTITY_NAME","CREATE_ENTITY","UPDATE_ENTITY","DATATABLE_TITLE"],"mappings":"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","file":"static/js/AdminPage.e3f528ab.chunk.js","sourcesContent":["export const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\n\nexport const OPEN_ADVANCED_BOX = \"OPEN_ADVANCED_BOX\";\nexport const CLOSE_ADVANCED_BOX = \"CLOSE_ADVANCED_BOX\";\n\nexport const OPEN_EDIT_BOX = \"OPEN_EDIT_BOX\";\nexport const CLOSE_EDIT_BOX = \"CLOSE_EDIT_BOX\";\n\nexport const OPEN_PANEL = \"OPEN_PANEL\";\nexport const CLOSE_PANEL = \"CLOSE_PANEL\";\nexport const COLLAPSE_PANEL = \"COLLAPSE_PANEL\";\n\nexport const OPEN_BOX = \"OPEN_BOX\";\nexport const CLOSE_BOX = \"CLOSE_BOX\";\nexport const COLLAPSE_BOX = \"COLLAPSE_BOX\";\n\nexport const OPEN_READ_BOX = \"OPEN_READ_BOX\";\nexport const CLOSE_READ_BOX = \"CLOSE_READ_BOX\";\nexport const COLLAPSE_READ_BOX = \"COLLAPSE_READ_BOX\";\n","import * as actionTypes from \"./types\";\n\nexport const initialState = {\n  isModalOpen: false,\n  isPanelCollapsed: false,\n  isBoxCollapsed: false,\n  isReadBoxOpen: true,\n  isAdvancedBoxOpen: false,\n  isEditBoxOpen: false,\n};\n\nexport function contextReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.OPEN_MODAL:\n      return {\n        ...state,\n        isModalOpen: true,\n      };\n    case actionTypes.CLOSE_MODAL:\n      return {\n        ...state,\n        isModalOpen: false,\n      };\n\n    case actionTypes.OPEN_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: false,\n      };\n    case actionTypes.CLOSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: true,\n      };\n    case actionTypes.COLLAPSE_PANEL:\n      return {\n        ...state,\n        isPanelCollapsed: !state.isPanelCollapsed,\n      };\n    case actionTypes.OPEN_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: true,\n      };\n    case actionTypes.CLOSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: false,\n      };\n    case actionTypes.COLLAPSE_BOX:\n      return {\n        ...state,\n        isBoxCollapsed: !state.isBoxCollapsed,\n      };\n    case actionTypes.OPEN_READ_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: false,\n        isReadBoxOpen: true,\n      };\n    case actionTypes.CLOSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n      };\n    case actionTypes.OPEN_ADVANCED_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isEditBoxOpen: false,\n        isAdvancedBoxOpen: true,\n      };\n    case actionTypes.CLOSE_ADVANCED_BOX:\n      return {\n        ...state,\n        isAdvancedBoxOpen: false,\n      };\n    case actionTypes.OPEN_EDIT_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: false,\n        isAdvancedBoxOpen: false,\n        isEditBoxOpen: true,\n      };\n    case actionTypes.CLOSE_EDIT_BOX:\n      return {\n        ...state,\n        isEditBoxOpen: false,\n      };\n    case actionTypes.COLLAPSE_READ_BOX:\n      return {\n        ...state,\n        isReadBoxOpen: !state.isReadBoxOpen,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n","import * as actionTypes from \"./types\";\n\nconst contextActions = (dispatch) => {\n  return {\n    modal: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_MODAL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_MODAL });\n      },\n    },\n    advancedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_ADVANCED_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_ADVANCED_BOX });\n      },\n    },\n    editBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_EDIT_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_EDIT_BOX });\n      },\n    },\n    panel: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_PANEL });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_PANEL });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_PANEL });\n      },\n    },\n    collapsedBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_BOX });\n      },\n    },\n    readBox: {\n      open: () => {\n        dispatch({ type: actionTypes.OPEN_READ_BOX });\n      },\n      close: () => {\n        dispatch({ type: actionTypes.CLOSE_READ_BOX });\n      },\n      collapse: () => {\n        dispatch({ type: actionTypes.COLLAPSE_READ_BOX });\n      },\n    },\n  };\n};\n\nexport default contextActions;\n","const contextSelectors = (state) => {\n  return {\n    isModalOpen: () => {\n      return state.isModalOpen;\n    },\n    isPanelOpen: () => {\n      return state.isPanelOpen;\n    },\n    isBoxOpen: () => {\n      return state.isBoxOpen;\n    },\n  };\n};\n\nexport default contextSelectors;\n","import React, { useMemo, useReducer, createContext, useContext } from \"react\";\nimport { initialState, contextReducer } from \"./reducer\";\nimport contextActions from \"./actions\";\nimport contextSelectors from \"./selectors\";\n\nconst CrudContext = createContext();\n\nfunction CrudContextProvider({ children }) {\n  const [state, dispatch] = useReducer(contextReducer, initialState);\n  const value = useMemo(() => [state, dispatch], [state]);\n\n  return <CrudContext.Provider value={value}>{children}</CrudContext.Provider>;\n}\n\nfunction useCrudContext() {\n  const context = useContext(CrudContext);\n  if (context === undefined) {\n    throw new Error(\"useCrudContext must be used within a CrudContextProvider\");\n  }\n  const [state, dispatch] = context;\n  const crudContextAction = contextActions(dispatch);\n  const crudContextSelector = contextSelectors(state);\n  return { state, crudContextAction, crudContextSelector };\n}\n\nexport { CrudContextProvider, useCrudContext };\n","import * as actionTypes from \"./types\";\nimport { request } from \"@/request\";\n\nexport const crud = {\n  resetState: () => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_STATE,\n    });\n  },\n  resetAction: (actionType) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.RESET_ACTION,\n      keyState: actionType,\n      payload: null,\n    });\n  },\n  currentItem: (data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ITEM,\n      payload: { ...data },\n    });\n  },\n  currentAction: (actionType, data) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.CURRENT_ACTION,\n      keyState: actionType,\n      payload: { ...data },\n    });\n  },\n  list: (entity, currentPage = 1) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"list\",\n      payload: null,\n    });\n\n    let data = await request.list(entity, { page: currentPage });\n\n    if (data.success === true) {\n      const result = {\n        items: data.result,\n        pagination: {\n          current: parseInt(data.pagination.page, 10),\n          pageSize: 10,\n          total: parseInt(data.pagination.count, 10),\n        },\n      };\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"list\",\n        payload: result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"list\",\n        payload: null,\n      });\n    }\n  },\n  create: (entity, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"create\",\n      payload: null,\n    });\n    let data = await request.create(entity, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"create\",\n        payload: data.result,\n      });\n\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"create\",\n        payload: null,\n      });\n    }\n  },\n  read: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"read\",\n      payload: null,\n    });\n\n    let data = await request.read(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"read\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"read\",\n        payload: null,\n      });\n    }\n  },\n  update: (entity, itemId, jsonData) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"update\",\n      payload: null,\n    });\n\n    let data = await request.update(entity, itemId, jsonData);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"update\",\n        payload: data.result,\n      });\n      dispatch({\n        type: actionTypes.CURRENT_ITEM,\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"update\",\n        payload: null,\n      });\n    }\n  },\n\n  delete: (entity, itemId) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"delete\",\n      payload: null,\n    });\n\n    let data = await request.delete(entity, itemId);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"delete\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"delete\",\n        payload: null,\n      });\n    }\n  },\n\n  search: (entity, source, option) => async (dispatch) => {\n    dispatch({\n      type: actionTypes.REQUEST_LOADING,\n      keyState: \"search\",\n      payload: null,\n    });\n\n    source.cancel();\n\n    source = request.source();\n    let data = await request.search(entity, source, option);\n\n    if (data.success === true) {\n      dispatch({\n        type: actionTypes.REQUEST_SUCCESS,\n        keyState: \"search\",\n        payload: data.result,\n      });\n    } else {\n      dispatch({\n        type: actionTypes.REQUEST_FAILED,\n        keyState: \"search\",\n        payload: null,\n      });\n    }\n  },\n};\n","import { createSelector } from \"reselect\";\n\nconst selectCrud = (state) => state.crud;\n\nexport const selectCurrentItem = createSelector(\n  [selectCrud],\n  (crud) => crud.current\n);\n\nexport const selectListItems = createSelector(\n  [selectCrud],\n  (crud) => crud.list\n);\nexport const selectItemById = (itemId) =>\n  createSelector(selectListItems, (list) =>\n    list.result.items.find((item) => item._id === itemId)\n  );\n\nexport const selectCreatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.create\n);\n\nexport const selectUpdatedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.update\n);\n\nexport const selectReadItem = createSelector([selectCrud], (crud) => crud.read);\n\nexport const selectDeletedItem = createSelector(\n  [selectCrud],\n  (crud) => crud.delete\n);\n\nexport const selectSearchedItems = createSelector(\n  [selectCrud],\n  (crud) => crud.search\n);\n","export default function uniqueId() {\n  // always start with a letter (for DOM friendlyness)\n  let idstr = String.fromCharCode(Math.floor(Math.random() * 25 + 65));\n  do {\n    // between numbers and characters (48 is 0 and 90 is Z (42-48 = 90)\n    const ascicodeChar = Math.floor(Math.random() * 25 + 65);\n    idstr += String.fromCharCode(ascicodeChar);\n    idstr += Math.floor(Math.random() * 99);\n  } while (idstr.length < 8);\n\n  return idstr;\n}\n","import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\n\nexport const login = (loginAdminData) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: { loading: true },\n  });\n  const data = await authService.login(loginAdminData);\n\n  if (data.success === true) {\n    console.log(data)\n    const authValue = {\n      current: data.result.admin,\n      loading: false,\n      isLoggedIn: true,\n      permissions: data.result.permissions\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.result.admin,\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS,\n  });\n  history.push(\"/login\");\n};\n","import React from \"react\";\nimport { Spin } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nexport default function Loading({ isLoading, children }) {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <Spin indicator={antIcon} spinning={isLoading}>\n      {children}\n    </Spin>\n  );\n}\n","import { parse } from \"querystring\";\nfunction getPageQuery() {\n  parse(window.location.href.split(\"?\")[1]);\n}\n\n/* \n To get nested object properties.\n admin = {\n    location: {\n        lat: 50,\n        long: 9\n    }\n }\n\n get(admin, 'location.lat')     // 50\n get(admin, 'location.foo.bar') // undefined\n*/\n\nexport function get(obj, key) {\n  return key.split(\".\").reduce(function (o, x) {\n    return o === undefined || o === null ? o : o[x];\n  }, obj);\n\n  // key.split('.').reduce(function(o, x) {\n  //     return (o === undefined || o === null) ? o : o[x];\n  //   }, obj);\n}\n\nObject.byString = function (o, s) {\n  s = s.replace(/\\[(\\w+)\\]/g, \".$1\"); // convert indexes to properties\n  s = s.replace(/^\\./, \"\"); // strip a leading dot\n  let a = s.split(\".\");\n  for (let i = 0, n = a.length; i < n; ++i) {\n    let k = a[i];\n    if (o !== null) {\n      if (k in o) {\n        o = o[k];\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n  return o;\n};\n\n/* \n To check only if a property exists, without getting its value. It similer get function.\n*/\nexport function has(obj, key) {\n  return key.split(\".\").every(function (x) {\n    if (typeof obj !== \"object\" || obj === null || x in obj === false)\n      /// !x in obj or  x in obj === true *** if you find any bug\n      return false;\n    obj = obj[x];\n    return true;\n  });\n}\n\n/* \n convert indexes to properties\n*/\nexport function valueByString(obj, string, devider) {\n  if (devider === undefined) {\n    devider = \"|\";\n  }\n  return string\n    .split(devider)\n    .map(function (key) {\n      return get(obj, key);\n    })\n    .join(\" \");\n}\n\n/*\n Submit multi-part form using ajax.\n*/\nexport function toFormData(form) {\n  let formData = new FormData();\n  const elements = form.querySelectorAll(\"input, select, textarea\");\n  for (let i = 0; i < elements.length; ++i) {\n    const element = elements[i];\n    const name = element.name;\n\n    if (name && element.dataset.disabled !== \"true\") {\n      if (element.type === \"file\") {\n        const file = element.files[0];\n        formData.append(name, file);\n      } else {\n        const value = element.value;\n        if (value && value.trim()) {\n          formData.append(name, value);\n        }\n      }\n    }\n  }\n\n  return formData;\n}\n\n/*\n Format Date to display admin\n*/\nexport function formatDate(param) {\n  const date = new Date(param);\n  let day = date.getDate().toString();\n  let month = (date.getMonth() + 1).toString();\n  const year = date.getFullYear();\n  if (month.length < 2) month = `0${month}`;\n  if (day.length < 2) day = `0${day}`;\n  const fullDate = `${day}/${month}/${year}`;\n  return fullDate;\n}\n\n/*\n Format Datetime to display admin\n*/\nexport function formatDatetime(param) {\n  let time = new Date(param).toLocaleTimeString();\n  return formatDate(param) + \" \" + time;\n}\n\n/*\n Set object value in html\n*/\nexport function bindValue(obj, parentElement) {\n  parentElement.querySelectorAll(\"[data-property]\").forEach((element) => {\n    const type = element.dataset.type;\n    let value = valueByString(obj, element.dataset.property);\n    switch (type) {\n      case \"date\":\n        value = formatDate(value);\n        break;\n\n      case \"datetime\":\n        value = formatDatetime(value);\n        break;\n\n      case \"currency\":\n        value = value.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n        break;\n\n      default:\n        break;\n    }\n    element.innerHTML = value;\n  });\n}\n\nexport default getPageQuery;\n","import React from \"react\";\n\nimport { CrudContextProvider } from \"@/context/crud\";\n\nfunction DefaultLayout({ children }) {\n  return <CrudContextProvider>{children}</CrudContextProvider>;\n}\n\nexport default DefaultLayout;\n","export default __webpack_public_path__ + \"static/media/adminimg.3c486505.png\";","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Layout, Avatar, Menu, Dropdown } from \"antd\";\n\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { logout } from \"@/redux/auth/actions\";\nimport uniqueId from \"@/utils/uniqueId\";\nimport adminimg from '../../assets/adminimg.png';\n\n\nconst { Header } = Layout;\n\nexport default function HeaderContent() {\n  const dispatch = useDispatch();\n // how to fetch data from database. kuki i want access of user's image and his email etc.\n\n  const menu = (\n    <div\n      style={{ border: \"1px solid black\", padding: \"20px\", display: \"flex\", margin: \"20px\" ,borderRadius:'15px',color:'white',boxShadow:'0px 0px 10px  #002140',background:'white'}}\n    >\n      <div style={{margin:'10px',marginRight:'20px',}}>\n        <img src={adminimg} style={{width:'100px',borderRadius:'100%'}} alt=\"adminimg\" />\n      </div>\n      <div style={{ display: \"flex\", flexDirection: \"column\" ,flexWrap:'wrap',justifyContent:'center',alignItems:'center'}}>\n        <h1 style={{ fontSize: 20, marginBottom: 20 }}>Hello Admin!</h1>\n        <button style={{border:'none',outline:'none',backgroundColor:'rgb(255 40 40',padding:'5px 10px'}} key={`${uniqueId()}`} onClick={() => dispatch(logout())}>\n          Logout\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <Header className=\"site-layout-background\" style={{ padding: 0, background: \"none\" }}>\n      <Dropdown overlay={menu} placement=\"bottomRight\" arrow trigger={[\"click\"]}>\n        <Avatar icon={<UserOutlined />} />\n      </Dropdown>\n    </Header>\n  );\n}\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\n\nconst CollapseBoxButton = ({ onChange, title }) => {\n  return (\n    <div className=\"collapseBoxHeader\" onClick={onChange}>\n      {title}\n    </div>\n  );\n};\n\nconst TopCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n  return (\n    <div className=\"TopCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nconst BottomCollapseBox = ({ isOpen, children }) => {\n  const show = isOpen\n    ? { display: \"none\", opacity: 0 }\n    : { display: \"block\", opacity: 1 };\n  return (\n    <div className=\"BottomCollapseBox\">\n      <div style={show}>\n        <Row>\n          <Col span={24}> {children}</Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default function CollapseBox({\n  topContent,\n  bottomContent,\n  buttonTitle,\n  isCollapsed,\n  onCollapse,\n  isPanelCollapsed,\n}) {\n  const collapsed = isCollapsed ? \"collapsed\" : \"\";\n  const isDiplayed = isPanelCollapsed ? \"-400px\" : \"0px\";\n  return (\n    <div\n      className=\"panelBox\"\n      style={{ width: \"400px\", marginLeft: isDiplayed }}\n    >\n      <TopCollapseBox isOpen={isCollapsed}>{topContent}</TopCollapseBox>\n      <div className={\"collapseBox \" + collapsed}>\n        <CollapseBoxButton title={buttonTitle} onChange={onCollapse} />\n        <div className=\"whiteBg\"></div>\n        <BottomCollapseBox isOpen={isCollapsed}>\n          {bottomContent}\n        </BottomCollapseBox>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { Layout } from \"antd\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport CollapseBox from \"../CollapseBox\";\n\nconst { Sider } = Layout;\n\nexport default function SidePanel({\n  config,\n  topContent,\n  bottomContent,\n  fixHeaderPanel,\n}) {\n  const { ADD_NEW_ENTITY } = config;\n  const { state, crudContextAction } = useCrudContext();\n  const { isPanelCollapsed, isBoxCollapsed } = state;\n  const { panel, collapsedBox } = crudContextAction;\n  const [styleSider, setStyleSider] = useState(\"0px\");\n  const [opacitySider, setOpacitySider] = useState(\"1\");\n\n  useEffect(() => {\n    if (isPanelCollapsed) {\n      setStyleSider(\"-400px\");\n      setOpacitySider(0);\n    } else {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }\n\n    setTimeout(() => {\n      setStyleSider(\"0px\");\n      setOpacitySider(1);\n    }, 300);\n  }, [isPanelCollapsed]);\n\n  const collapsePanel = () => {\n    panel.collapse();\n  };\n\n  const collapsePanelBox = () => {\n    collapsedBox.collapse();\n  };\n\n  return (\n    <Sider\n      // trigger={<MenuOutlined className=\"\" />}\n      width={400}\n      collapsible\n      collapsed={isPanelCollapsed}\n      collapsedWidth={\"0px\"}\n      onCollapse={collapsePanel}\n      // zeroWidthTriggerStyle={{\n      //   right: \"-50px\",\n      //   top: \"15px\",\n      // }}\n      style={{\n        background: \"#FFF\",\n        left: styleSider,\n        opacity: opacitySider,\n      }}\n    >\n      {fixHeaderPanel}\n      <CollapseBox\n        buttonTitle={ADD_NEW_ENTITY}\n        isPanelCollapsed={isPanelCollapsed}\n        isCollapsed={isBoxCollapsed}\n        onCollapse={collapsePanelBox}\n        topContent={topContent}\n        bottomContent={bottomContent}\n      ></CollapseBox>\n    </Sider>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport SidePanel from \"@/components/SidePanel\";\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function CrudLayout({\n  children,\n  config,\n  sidePanelTopContent,\n  sidePanelBottomContent,\n  fixHeaderPanel,\n}) {\n  return (\n    <DefaultLayout>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <SidePanel\n          config={config}\n          topContent={sidePanelTopContent}\n          bottomContent={sidePanelBottomContent}\n          fixHeaderPanel={fixHeaderPanel}\n        ></SidePanel>\n        <Layout className=\"site-layout\">\n          <HeaderContent />\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              padding: \"50px 40px\",\n              margin: \"50px auto\",\n              width: \"100%\",\n              maxWidth: \"1000px\",\n            }}\n          >\n            {children}\n          </Content>\n        </Layout>\n      </Layout>\n    </DefaultLayout>\n  );\n}\n","import React from \"react\";\n\nimport DefaultLayout from \"../DefaultLayout\";\nimport HeaderContent from \"../HeaderContent\";\n\nimport { Layout } from \"antd\";\n\nconst { Content } = Layout;\n\nexport default function DashboardLayout({ children }) {\n  return (\n    <Layout className=\"site-layout\">\n      <HeaderContent />\n      <Content\n        style={{\n          padding: \"30px 40px\",\n          margin: \"20px auto\",\n          width: \"100%\",\n          maxWidth:'1300px'\n        }}\n      >\n        {children}\n      </Content>\n    </Layout>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCreatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nconst permissions = JSON.parse(localStorage.getItem('auth')).permissions;\n\nexport default function CreateForm({ config, formElements, setForm }) {\n\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useSelector(selectCreatedItem);\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n  const [form] = Form.useForm();\n\n\n\n  const onSubmit = (fieldsValue) => {\n    dispatch(crud.create(entity, fieldsValue));\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"create\"));\n      dispatch(crud.list(entity));\n    }\n    if (entity == \"job\") {\n      setForm(form);\n    }\n  }, [isSuccess]);\n\n  return (\n    <Loading isLoading={isLoading}>\n      {permissions == 'superadmin' || permissions['create'].includes(entity == 'product' ? 'service' : entity) ?\n        (<Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n          {formElements}\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>) :\n        (<>You don't have authorization to create new {(entity == 'product') ? 'services' : { entity }}</>)}\n    </Loading>\n  );\n}\n","// import React, { useEffect } from \"react\";\n// import dayjs from \"dayjs\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { crud } from \"@/redux/crud/actions\";\n// import { useCrudContext } from \"@/context/crud\";\n// import { selectUpdatedItem } from \"@/redux/crud/selectors\";\n\n// import { Button, Form } from \"antd\";\n// import Loading from \"@/components/Loading\";\n\n// const permissions = JSON.parse(localStorage.getItem(\"auth\")).permissions;\n\n// export default function UpdateForm({ config, formElements }) {\n//   let { entity } = config;\n//   const dispatch = useDispatch();\n//   const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n\n//   const { state, crudContextAction } = useCrudContext();\n//   const { panel, collapsedBox, readBox } = crudContextAction;\n\n//   const [form] = Form.useForm();\n\n//   const onSubmit = (fieldsValue) => {\n//     if (fieldsValue) {\n//       const initials = `${fieldsValue.title.charAt(\n//         0\n//       )}${fieldsValue.client.charAt(0)}`; // Replace \"field1\" and \"field2\" with the actual fields you want to use\n//       const randomNumber = generateRandomNumber(); // Call the utility function to generate a random number\n//       const uniqueId = `${initials}${randomNumber}`;\n\n//       // Add the unique ID to the fieldsValue object\n//       fieldsValue = {\n//         ...fieldsValue,\n//         uniqueId,\n//       };\n\n//       if (fieldsValue.birthday) {\n//         fieldsValue = {\n//           ...fieldsValue,\n//           birthday: fieldsValue[\"birthday\"].format(\"DD/MM/YYYY\"),\n//         };\n//       }\n//       if (fieldsValue.date) {\n//         fieldsValue = {\n//           ...fieldsValue,\n//           birthday: fieldsValue[\"date\"].format(\"DD/MM/YYYY\"),\n//         };\n//       }\n//     }\n\n//     const id = current._id;\n//     dispatch(crud.update(entity, id, fieldsValue));\n//   };\n//   useEffect(() => {\n//     if (current) {\n//       if (current.birthday) {\n//         current.birthday = dayjs(current.birthday);\n//       }\n//       if (current.date) {\n//         current.date = dayjs(current.date);\n//       }\n//       form.setFieldsValue(current);\n//     }\n//   }, [current]);\n\n//   useEffect(() => {\n//     if (isSuccess) {\n//       readBox.open();\n//       collapsedBox.open();\n//       panel.open();\n//       form.resetFields();\n//       dispatch(crud.resetAction(\"update\"));\n//       dispatch(crud.list(entity));\n//     }\n//   }, [isSuccess]);\n\n//   const { isEditBoxOpen } = state;\n\n//   const show = isEditBoxOpen\n//     ? { display: \"block\", opacity: 1 }\n//     : { display: \"none\", opacity: 0 };\n//   return (\n//     <div style={show}>\n//       <Loading isLoading={isLoading}>\n//         {permissions == \"superadmin\" ||\n//         permissions[\"update\"].includes(\n//           entity == \"product\" ? \"service\" : entity\n//         ) ? (\n//           <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n//             {formElements}\n//             <Form.Item>\n//               <Button type=\"primary\" htmlType=\"submit\">\n//                 Submit\n//               </Button>\n//             </Form.Item>\n//           </Form>\n//         ) : (\n//           <>\n//             You don't have authorization to update{\" \"}\n//             {entity == \"product\" ? \"services\" : { entity }}\n//           </>\n//         )}\n//       </Loading>\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\nimport { Button, Form } from \"antd\";\nimport Loading from \"@/components/Loading\";\n\nconst permissions = JSON.parse(localStorage.getItem('auth')).permissions;\n\nexport default function UpdateForm({ config, formElements }) {\n  let { entity } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectUpdatedItem);\n\n  const { state, crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  const [form] = Form.useForm();\n  const [uniqueId, setUniqueId] = useState('');\n\n  const onSubmit = async (fieldsValue) => {\n    if (fieldsValue) {\n      // Generate unique ID based on field values\n      const initials = `${fieldsValue.field1.charAt(0)}${fieldsValue.field2.charAt(0)}`;\n      const randomNumber = Math.floor(Math.random() * 10000);\n      const generatedUniqueId = `${initials}${randomNumber}`;\n\n      fieldsValue = {\n        ...fieldsValue,\n        uniqueId: generatedUniqueId,\n      };\n\n      const id = current._id;\n      await dispatch(crud.update(entity, id, fieldsValue));\n    }\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      readBox.open();\n      collapsedBox.open();\n      panel.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"update\"));\n      dispatch(crud.list(entity));\n    }\n  }, [isSuccess]);\n\n  useEffect(() => {\n    if (current) {\n      if (current.birthday) {\n        current.birthday = dayjs(current.birthday);\n      }\n      if (current.date) {\n        current.date = dayjs(current.date);\n      }\n      form.setFieldsValue(current);\n\n      if (current.uniqueId) {\n        setUniqueId(current.uniqueId);\n      }\n    }\n  }, [current]);\n\n  const { isEditBoxOpen } = state;\n  const show = isEditBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  const handleStorageLogic = () => {\n    // Perform the storage logic here, e.g., dispatch an action or make an API request\n    console.log(\"Storing unique ID:\", uniqueId);\n  };\n\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        {(permissions === 'superadmin' || permissions['update'].includes(entity === 'product' ? 'service' : entity)) ?\n          (\n            <Form form={form} layout=\"vertical\" onFinish={onSubmit}>\n              {formElements}\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          ) :\n          (\n            <>\n              You don't have authorization to update {(entity === 'product') ? 'services' : entity}\n            </>\n          )\n        }\n      </Loading>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Modal } from \"antd\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectDeletedItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function DeleteModal({ config }) {\n  let {\n    entity,\n    entityDisplayLabels,\n    deleteMessage = \"Do you want delete : \",\n    modalTitle = \"Remove Item\",\n  } = config;\n  const dispatch = useDispatch();\n  const { current, isLoading, isSuccess } = useSelector(selectDeletedItem);\n  const { state, crudContextAction } = useCrudContext();\n  const { isModalOpen } = state;\n  const { modal } = crudContextAction;\n  const [displayItem, setDisplayItem] = useState(\"\");\n\n  useEffect(() => {\n    if (isSuccess) {\n      modal.close();\n      dispatch(crud.list(entity));\n      dispatch(crud.resetAction(entity));\n    }\n    if (current) {\n      let labels = entityDisplayLabels\n        .map((x) => valueByString(current, x))\n        .join(\" \");\n\n      setDisplayItem(labels);\n    }\n  }, [isSuccess, current]);\n\n  const handleOk = () => {\n    const id = current._id;\n    dispatch(crud.delete(entity, id));\n  };\n  const handleCancel = () => {\n    if (!isLoading) modal.close();\n  };\n  return (\n    <Modal\n      title={modalTitle}\n      visible={isModalOpen}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      confirmLoading={isLoading}\n    >\n      <p>\n        {deleteMessage}\n        {displayItem}\n      </p>\n    </Modal>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectCurrentItem } from \"@/redux/crud/selectors\";\nimport { valueByString } from \"@/utils/helpers\";\n\nexport default function ReadItem({ config }) {\n  let { readColumns } = config;\n  const { result: currentResult } = useSelector(selectCurrentItem);\n  const { state } = useCrudContext();\n  const { isReadBoxOpen } = state;\n  const [listState, setListState] = useState([]);\n\n  const isFirstRun = useRef(true);\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    const list = [];\n    readColumns.map((props) => {\n      const propsKey = props.dataIndex;\n      const propsTitle = props.title;\n      const value = valueByString(currentResult, propsKey);\n      list.push({ propsKey, label: propsTitle, value: value });\n    });\n    setListState(list);\n  }, [currentResult]);\n\n  const show = isReadBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  const itemsList = listState.map((item) => {\n    return (\n      <Row key={item.propsKey} gutter={12}>\n        <Col className=\"gutter-row\" span={8}>\n          <p>{item.label}</p>\n        </Col>\n        <Col className=\"gutter-row\" span={2}>\n          <p> : </p>\n        </Col>\n        <Col className=\"gutter-row\" span={14}>\n          <p>{item.value}</p>\n        </Col>\n      </Row>\n    );\n  });\n\n  return <div style={show}>{itemsList}</div>;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\n\nimport { AutoComplete, Input } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { request } from \"@/request\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectSearchedItems } from \"@/redux/crud/selectors\";\n\nimport { Empty } from \"antd\";\n\nexport default function SearchItem({ config }) {\n  let { entity, searchConfig } = config;\n\n  const { displayLabels, searchFields, outputValue = \"_id\" } = searchConfig;\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const [options, setOptions] = useState([]);\n\n  const { crudContextAction } = useCrudContext();\n  const { panel, collapsedBox, readBox } = crudContextAction;\n\n  let source = request.source();\n  const { result, isLoading, isSuccess } = useSelector(selectSearchedItems);\n\n  const isTyping = useRef(false);\n\n  let delayTimer = null;\n  useEffect(() => {\n    isLoading && setOptions([{ label: \"... Searching\" }]);\n  }, [isLoading]);\n  const onSearch = (searchText) => {\n    isTyping.current = true;\n\n    clearTimeout(delayTimer);\n    delayTimer = setTimeout(function () {\n      if (isTyping.current && searchText !== \"\") {\n        dispatch(\n          crud.search(entity, source, {\n            question: searchText,\n            fields: searchFields,\n          })\n        );\n      }\n      isTyping.current = false;\n    }, 500);\n  };\n\n  const onSelect = (data) => {\n    const currentItem = result.find((item) => {\n      return item[outputValue] === data;\n    });\n\n    dispatch(crud.currentItem(currentItem));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n\n  const onChange = (data) => {\n    const currentItem = options.find((item) => {\n      return item.value === data;\n    });\n    const currentValue = currentItem ? currentItem.label : data;\n    setValue(currentValue);\n  };\n\n  useEffect(() => {\n    let optionResults = [];\n\n    result.map((item) => {\n      const labels = displayLabels.map((x) => item[x]).join(\" \");\n      optionResults.push({ label: labels, value: item[outputValue] });\n    });\n\n    setOptions(optionResults);\n  }, [result]);\n\n  return (\n    <AutoComplete\n      value={value}\n      options={options}\n      style={{\n        width: \"100%\",\n      }}\n      onSelect={onSelect}\n      onSearch={onSearch}\n      onChange={onChange}\n      notFoundContent={!isSuccess ? <Empty /> : \"\"}\n      allowClear={true}\n      placeholder=\"Your Search here\"\n    >\n      <Input suffix={<SearchOutlined />} />\n    </AutoComplete>\n  );\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { Dropdown, Button, PageHeader, Table } from \"antd\";\n\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectListItems } from \"@/redux/crud/selectors\";\n\nimport uniqueId from \"@/utils/uniqueId\";\n\nexport default function DataTable({ config, DropDownRowMenu, AddNewItem }) {\n  let { entity, dataTableColumns, dataTableTitle } = config;\n  dataTableColumns = [\n    ...dataTableColumns,\n    {\n      title: \"\",\n      render: (row) => (\n        <Dropdown overlay={DropDownRowMenu({ row })} trigger={[\"click\"]}>\n          <EllipsisOutlined style={{ cursor: \"pointer\", fontSize: \"24px\" }} />\n        </Dropdown>\n      ),\n    },\n  ];\n\n  const { result: listResult, isLoading: listIsLoading } = useSelector(\n    selectListItems\n  );\n\n  const { pagination, items } = listResult;\n\n  const dispatch = useDispatch();\n\n  const handelDataTableLoad = useCallback((pagination) => {\n    dispatch(crud.list(entity, pagination.current));\n  }, []);\n\n  useEffect(() => {\n    dispatch(crud.list(entity));\n  }, []);\n\n  return (\n    <>\n      <PageHeader\n        onBack={() => window.history.back()}\n        title={dataTableTitle}\n        ghost={false}\n        extra={[\n          <Button onClick={handelDataTableLoad} key={`${uniqueId()}`}>\n            Refresh\n          </Button>,\n          <AddNewItem key={`${uniqueId()}`} config={config} />,\n        ]}\n        style={{\n          padding: \"20px 0px\",\n        }}\n      ></PageHeader>\n      <Table\n        columns={dataTableColumns}\n        rowKey={(item) => item._id}\n        dataSource={items}\n        pagination={pagination}\n        loading={listIsLoading}\n        onChange={handelDataTableLoad}\n      />\n    </>\n  );\n}\n","// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\n\nLockOutlined.displayName = 'LockOutlined';\nexport default /*#__PURE__*/React.forwardRef(LockOutlined);","import React from \"react\";\n\nimport { Button, Menu } from \"antd\";\nimport {\n  EyeOutlined,\n  EditOutlined,\n  LockOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { selectItemById } from \"@/redux/crud/selectors\";\nimport { useCrudContext } from \"@/context/crud\";\nimport uniqueId from \"@/utils/uniqueId\";\nimport DataTable from \"@/components/DataTable\";\n\nfunction AddNewItem({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox, panel } = crudContextAction;\n  const { ADD_NEW_ENTITY } = config;\n  const handelClick = () => {\n    panel.open();\n    collapsedBox.close();\n  };\n\n  return (\n    <Button onClick={handelClick} type=\"primary\">\n      {ADD_NEW_ENTITY}\n    </Button>\n  );\n}\nfunction DropDownRowMenu({ row }) {\n  const dispatch = useDispatch();\n  const { crudContextAction } = useCrudContext();\n  const {\n    panel,\n    collapsedBox,\n    modal,\n    advancedBox,\n    readBox,\n    editBox,\n  } = crudContextAction;\n  const item = useSelector(selectItemById(row._id));\n  const Show = () => {\n    dispatch(crud.currentItem(item));\n    panel.open();\n    collapsedBox.open();\n    readBox.open();\n  };\n  function Edit() {\n    dispatch(crud.currentAction(\"update\", item));\n    editBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function UpdatePassword() {\n    dispatch(crud.currentAction(\"update\", item));\n    advancedBox.open();\n    panel.open();\n    collapsedBox.open();\n  }\n  function Delete() {\n    dispatch(crud.currentAction(\"delete\", item));\n    modal.open();\n  }\n  return (\n    <Menu style={{ minWidth: 130 }}>\n      <Menu.Item key={`${uniqueId()}`} icon={<EyeOutlined />} onClick={Show}>\n        Show\n      </Menu.Item>\n      <Menu.Item key={`${uniqueId()}`} icon={<EditOutlined />} onClick={Edit}>\n        Edit\n      </Menu.Item>\n      <Menu.Item\n        key={`${uniqueId()}`}\n        icon={<LockOutlined />}\n        onClick={UpdatePassword}\n      >\n        Update Password\n      </Menu.Item>\n      <Menu.Item\n        key={`${uniqueId()}`}\n        icon={<DeleteOutlined />}\n        onClick={Delete}\n      >\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default function AdminCrudModule({ config }) {\n  return (\n    <DataTable\n      config={config}\n      DropDownRowMenu={DropDownRowMenu}\n      AddNewItem={AddNewItem}\n    />\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\nimport { selectUpdatedItem } from \"@/redux/crud/selectors\";\n\nimport { Button, Form, Input } from \"antd\";\nimport { LockOutlined } from \"@ant-design/icons\";\nimport Loading from \"@/components/Loading\";\nimport useOnFetch from \"@/hooks/useOnFetch\";\nimport { request } from \"@/request\";\n\nexport default function UpdatePassword({ config }) {\n  const dispatch = useDispatch();\n  const { current } = useSelector(selectUpdatedItem);\n\n  const { state } = useCrudContext();\n\n  const [form] = Form.useForm();\n\n  const { onFetch, result, isLoading, isSuccess } = useOnFetch();\n\n  const handelSubmit = (fieldsValue) => {\n    const id = current._id;\n    const updateFn = () => {\n      return request.patch(\"admin/password-update/\" + id, fieldsValue);\n    };\n    onFetch(updateFn);\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      // readBox.open();\n      form.resetFields();\n      dispatch(crud.resetAction(\"update\"));\n    }\n  }, [isSuccess]);\n\n  const { isAdvancedBoxOpen } = state;\n\n  const show = isAdvancedBoxOpen\n    ? { display: \"block\", opacity: 1 }\n    : { display: \"none\", opacity: 0 };\n\n  return (\n    <div style={show}>\n      <Loading isLoading={isLoading}>\n        <h3>Update Password</h3>\n        <div className=\"space\"></div>\n        <Form form={form} layout=\"vertical\" onFinish={handelSubmit}>\n          <Form.Item\n            label=\"New Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Password!\",\n                len: 8,\n              },\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              autoComplete=\"off\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Update\n            </Button>\n          </Form.Item>\n        </Form>\n      </Loading>\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function useOnFetch() {\n  const [result, setResult] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const onFetch = async (fetchingFn) => {\n    setIsLoading(true);\n\n    const data = await fetchingFn();\n    if (data.success === true) {\n      setIsSuccess(true);\n      setResult(data.result);\n    }\n    setIsLoading(false);\n  };\n\n  return { onFetch, result, isSuccess, isLoading };\n}\n","import React, { useLayoutEffect } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nimport CreateForm from \"@/components/CreateForm\";\nimport UpdateForm from \"@/components/UpdateForm\";\nimport DeleteModal from \"@/components/DeleteModal\";\nimport ReadItem from \"@/components/ReadItem\";\nimport SearchItem from \"@/components/SearchItem\";\n\nimport { useDispatch } from \"react-redux\";\nimport { crud } from \"@/redux/crud/actions\";\nimport { useCrudContext } from \"@/context/crud\";\n\nimport { CrudLayout } from \"@/layout\";\n\nimport AdminDataTable from \"./AdminDataTable\";\nimport UpdatePassword from \"./UpdatePassword\";\nimport { useEffect } from \"react\";\n\nfunction SidePanelTopContent({ config, formElements }) {\n  return (\n    <>\n      <ReadItem config={config} />\n      <UpdateForm config={config} formElements={formElements} />\n      <UpdatePassword config={config} />\n    </>\n  );\n}\n\nfunction FixHeaderPanel({ config }) {\n  const { crudContextAction } = useCrudContext();\n  const { collapsedBox } = crudContextAction;\n\n  const addNewItem = () => {\n    collapsedBox.close();\n  };\n  useEffect(()=>{\n    crudContextAction.panel.close();\n  },[]);\n  return (\n    <div className=\"box\">\n      <Row gutter={12}>\n        <Col className=\"gutter-row\" span={21}>\n          <h1 style={{ fontSize: 20, marginBottom: 20 }}>\n            {config.panelTitle}\n          </h1>\n        </Col>\n      </Row>\n      <Row gutter={8}>\n        <Col className=\"gutter-row\" span={21}>\n          <SearchItem config={config} />\n        </Col>\n        <Col className=\"gutter-row\" span={3}>\n          <Button\n            onClick={addNewItem}\n            block={true}\n            icon={<PlusOutlined />}\n          ></Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction AdminCrudModule({ config, createForm, updateForm }) {\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    dispatch(crud.resetState());\n  }, []);\n\n  return (\n    <CrudLayout\n      config={config}\n      fixHeaderPanel={<FixHeaderPanel config={config} />}\n      sidePanelBottomContent={\n        <CreateForm config={config} formElements={createForm} />\n      }\n      sidePanelTopContent={\n        <SidePanelTopContent config={config} formElements={updateForm} />\n      }\n    >\n      <AdminDataTable config={config} />\n      <DeleteModal config={config} />\n    </CrudLayout>\n  );\n}\n\nexport default AdminCrudModule;\n","import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Select } from \"antd\";\nimport { request } from \"@/request\";\nimport useFetch from \"@/hooks/useFetch\";\n\nconst { Option } = Select;\n\nexport default function AdminForm({ isUpdateForm = false }) {\n  const [roles, setRoles] = useState();\n  const [admins, setAdmins] = useState();\n\n  const fetchedRoles = useFetch(() => request.list(\"role\", {}));\n  const fetchedAdmins = useFetch(() => request.list(\"admin\", {}));\n\n  useEffect(() => {\n    setAdmins(() => fetchedAdmins.result)\n  }, [fetchedAdmins.result])\n\n  useEffect(() => {\n    setRoles(() => fetchedRoles.result)\n  }, [fetchedRoles.result]);\n\n  return (\n    <>\n      <Form.Item\n        label=\"E-mail\"\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Email!\",\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n      {!isUpdateForm && (\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Password!\",\n            },\n          ]}\n        >\n          <Input type=\"password\" autoComplete=\"off\" />\n        </Form.Item>\n      )}\n\n      <Form.Item\n        label=\"name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"surname\"\n        name=\"surname\"\n        rules={[\n          {\n            required: true,\n          },\n        ]}\n      >\n        <Input autoComplete=\"off\" />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Manager\"\n        name=\"manager\"\n      >\n        <Select\n          placeholder=\"---Select---\"\n        >\n          {admins && admins.map(admin => (<Option value={capitalize(admin.name) + \" \" + capitalize(admin.surname)}>{capitalize(admin.name) + \" \" + capitalize(admin.surname)}</Option>))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Manage\"\n        name=\"manage\"\n      >\n        <Select\n          mode=\"multiple\"\n          placeholder=\"---Select---\"\n        >\n          {admins && admins.map(admin => (<Option value={capitalize(admin.name) + \" \" + capitalize(admin.surname)}>{capitalize(admin.name) + \" \" + capitalize(admin.surname)}</Option>))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Role\"\n        name=\"rolename\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Role name!\",\n          },\n        ]}\n      >\n        <Select\n          placeholder=\"---Select---\"\n        >\n          {roles && roles.map(role => (<Option value={role.rolename}>{capitalize(role.rolename)}</Option>))}\n        </Select>\n      </Form.Item>\n    </>\n  );\n}\n\nfunction capitalize(string) {\n  if (!string) return \"\";\n  return string[0].toUpperCase() + string.substring(1);\n}\n","import React from \"react\";\n\nimport AdminCrudModule from \"@/modules/AdminCrudModule\";\nimport AdminForm from \"@/forms/AdminForm\";\nimport { request } from \"@/request\";\nimport useFetch from \"@/hooks/useFetch\";\n\nexport default function Admin() {\n  const entity = \"admin\";\n  const searchConfig = {\n    displayLabels: [\"name\", \"surname\"],\n    searchFields: \"email,name,surname\",\n    outputValue: \"_id\",\n  };\n  const adminList = useFetch(() => {\n    return request.list(\"admin\");\n  }).result;\n  console.log(adminList);\n\n  const panelTitle = \"Admin Panel\";\n  const dataTableTitle = \"Admin Lists\";\n  const entityDisplayLabels = [\"email\"];\n\n  const readColumns = [\n    { title: \"Name\", dataIndex: \"name\" },\n    { title: \"Surname\", dataIndex: \"surname\" },\n    { title: \"Email\", dataIndex: \"email\" },\n    { title: \"Role\", dataIndex: \"rolename\" },\n    { title: \"Department\", dataIndex: \"departments\" },\n    { title: \"Manager\", dataIndex: \"manager\" },\n    { title: \"Managing\", dataIndex: \"manage\" }\n  ];\n\n  const dataTableColumns = [\n    { title: \"Name\", dataIndex: \"name\" },\n    { title: \"Surname\", dataIndex: \"surname\" },\n    { title: \"Email\", dataIndex: \"email\" },\n    { title: \"Role\", dataIndex: \"rolename\" },\n  ];\n  const ADD_NEW_ENTITY = \"Add new admin\";\n  const DATATABLE_TITLE = \"Admins List\";\n  const ENTITY_NAME = \"admin\";\n  const CREATE_ENTITY = \"Create admin\";\n  const UPDATE_ENTITY = \"Update admin\";\n\n  const config = {\n    entity,\n    panelTitle,\n    dataTableTitle,\n    ENTITY_NAME,\n    CREATE_ENTITY,\n    ADD_NEW_ENTITY,\n    UPDATE_ENTITY,\n    DATATABLE_TITLE,\n    readColumns,\n    dataTableColumns,\n    searchConfig,\n    entityDisplayLabels,\n  };\n  return (\n    <AdminCrudModule\n      createForm={<AdminForm />}\n      updateForm={<AdminForm isUpdateForm={true} />}\n      config={config}\n    />\n   \n  );\n}\n"],"sourceRoot":""}